enum MAX_TEXTU
{
	faName[25],
    faName2[25],
    faName3[25],
    faModel
};
#define MAX_TEXTURES 18
new TEXTURE_INFO[MAX_TEXTURES][MAX_TEXTU] = {
	{"Паркет - 1","sw_bankint", "woodfloor1",13007},//1
	{"Вода","rczero_track", "waterclear256",3947},//2
	{"Доски - 1", "hashmarket1_sfs", "woodboards2",10433},//3
	{"Паркет - 2","ufo_bar", "sa_wood08_128",16150},//4
	{"Трава", "vgseland03_lvs", "grassdry_128HV",8460},//5
	{"Доски - 2", "woodpanels", "planks01",1219},//6
	{"Темное дерево", "sw_furniture", "CJ_WOOD5",12954},//7
	{"Доски - 3", "ufo_bar", "woodboards1",16150},//8
	{"Желтая текстура","trainplatform_sfse", "concreteyellow256 copy",11306},//9
	{"Зеленая текстура","traingen_sfse", "desgreengrass",10931},//10
	{"Желтая мозайка","tempstuff_lae", "examball1_LAe",5408},//11
	{"Синие полосы","sw_block09", "ablusrip",12964},//12
	{"Разноцветная мозайка","sunrise09_lawn", "mosaic1_LAwn",5769},//13
	{"Коричневая кожа","station", "rustd64",3900},//14
	{"Синие доски","w_town3cs_t", "sw_barnwoodblu",18265},//15
	{"Желтоватая текстура","w_town3cs_t", "corugwall_sandy",18265},//16
	{"Желто-черная текстура","warehus_las2", "ws_carparkwall2",5174},//17
	{"Человек с битой","vgebillboards", "base5_1",9184}//18
};

#define MAX_BUY_FURN 413
enum furna
{
    tid,
    tablename[70],
    tableprice,
    tCategory
};
new FurnitureBuy[MAX_BUY_FURN][furna] = {
//Техника
	//Холодильники
	{1780, "Старый холодильник [170$]", 170, 0},//0
	{2127, "Красный холодильник[230$]", 230, 0},//1
	{2131, "Кремовый холодильник [220$]", 220, 0},//2
	{2147, "Металлический холодильник [180$]", 180, 0},//3
	{2360, "Морозильная камера [190$]", 190, 0},//4
	//Плиты
	{2017, "Плита Мэгги Ко [200$]", 200, 1},//5
	{2339, "Сливочная металлическая плита [180$]", 180, 1},//6
	{2294, "Красная плита [260$]", 260, 1},//7
	{2135, "Плита Стерлин Ко [300$]", 300, 1},//8
	{2170, "Старая городская плита [170$]", 170, 1},//9
	//Мусорки
	{1235, "Сетчатая мусорка [30$]", 30, 2},//10
	{1300, "Каменная мусорка [110$]", 110, 2},//11
	{1328, "Аллюминиевая мусорка [50$]", 50, 2},//12
	{1329, "Мусорка из гетто [20$]", 20, 2},//13
	{1330, "Мусорка со спец. мешком [60$]", 60, 2},//14
	{1337, "Темная мусорка с колесиками [80$]", 80, 2},//15
	{1339, "Голубая мусорка с колесиками [82$]", 82, 2},//16
	{1347, "Уличная мусорка [20$]", 20, 2},//17
	{1359, "Металлическая сетчатая мусорка [60$]", 60, 2},//18
	//Небольшая техника
	{2421, "Микроволновка [152$]", 152, 3},//19
	{2426, "Тостер [127$]", 127, 3},//20
	//Мусорные контейнеры
	{1331, "Зеленый контейнер [190$]", 190, 4},//21
	{1333, "Красный контейнер [190$]", 190, 4},//22
	{1334, "Синий контейнер [190$]", 190, 4},//23
	{1345, "Черный контейнер [200$]", 200, 4},//24
	{1372, "Зеленый контейнер [200$]", 200, 4},//25
//Комфорт
    //Кровати
	{1700, "Розовая кровать [750$]", 750, 5},//26
	{1701, "Коричневая кровать [900$]", 900, 5},//27
	{1745, "Разноцветная полосатая кровать [700$]", 700, 5},//28
	{1793, "Матрас [300$]", 300, 5},//29
	{1794, "Двуспальная клетчатая деревянная кровать [700$]", 700, 5},//30
	{1795, "Пляжная кровать [500$]", 500, 5},//31
	{1796, "Односпальная клетчатая деревянная кровать [500$]", 500, 5},//32
	{1797, "Кровать со стильными ножками [578$]", 578, 5},//33
	{1798, "Деревянная основа с матрасом [550$]", 550, 5},//34
	{1799, "Коричнево-желтая ватная кровать [670$]", 670, 5},//35
	{1800, "Металлическая тюремная кровать [300$]", 300, 5},//36
	{1801, "Кровать из белого дерева [800$]", 800, 5},//37
	{1802, "Деревянная кровать с цветочным одеялом [730$]", 730, 5},//38
	{1803, "Деревянная кровать с цветочным одеялом [770$]", 770, 5},//39
	{1812, "Металлическая тюремная кровать [330$]", 330, 5},//40
	{2299, "Коричневая ватная кровать [690$]", 690, 5},//41
	{2302, "Кровать из каюты [420$]", 420, 5},//42
	{2603, "Белая полицейская кровать [400$]", 400, 5},//43
	{14866, "Тропическая кровать [670$]", 670, 5},//44
	{14880, "Матрас с покрывалом [320$]", 320, 5},//45
	{14446, "Большая кровать в стиле зебры [800$]", 800, 5},//46
    //Стулья
	{1663, "Вращающийся черный стул [130$]", 120, 6},//47
	{1671, "Вращающийся черный стул с ручками [145$]", 145, 6},//48
	{1720, "Деревянный стул [159$]", 159, 6},//49
	{1721, "Металлический стул [110$]", 110, 6},//50
	{1739, "Обеденный деревянный стул [170$]", 170, 6},//51
	{2291, "Коричневый шелковый пуфик [150$]", 150, 6},//52
	{1806, "Вращающийся синий стул [130$]", 130, 6},//53
	{1810, "Складывающийся стул [70$]", 70, 6},//54
	{1811, "Овальный деревянный стул [140$]", 140, 6},//55
	{2079, "Зеленный обеденный стул [160$]", 160, 6},//56
	{2120, "Деревянный обеденный стул [151$]", 151, 6},//57
	{2121, "Красный складывающийся стул [90$]", 90, 6},//58
	{2122, "Белый обеденный стул [150$]", 150, 6},//59
	{2123, "Белый обеденный стул с деревянными ножками [170$]", 170, 6},//60
	{2124, "Деревянный обеденный стул [170$]", 170, 6},//61
	{2310, "Овальный стул с метеллическими ножками [150$]", 150, 6},//62
	{2636, "Стул из пиццерии [120$]", 120, 6},//63
	{2724, "Черный металлический стул [120$]", 120, 6},//64
	{2776, "Черный металлический стул [120$]", 120, 6},//65
	//Кресла
	{1704, "Черное шелковое кресло [270$]", 270, 7},//66
	{1705, "Коричневое шелковое кресло [270$]", 270, 7},//67
	{1707, "Кресло в виде багажника авто [250$]", 250, 7},//68
	{1708, "Синее бизнес-кресло [280$]", 280, 7},//69
	{1711, "Обычное кресло [230$]", 230, 7},//70
	{1727, "Черное бизнес-кресло [280$]", 280, 7},//71
	{1735, "Кресло в стиле кантри [240$]", 240, 7},//72
	{1755, "Синее кресло [250$]", 250, 7},//73
	{1758, "Кресло в осеннем стиле [250$]", 250, 7},//74
	{1759, "Простое цветочное кресло [250$]", 250, 7},//75
	{1762, "Простое деревянное кресло [250$]", 250, 7},//76
	{1765, "Простое клетчатое кресло [250$]", 250, 7},//77
	{1767, "Простое индийское кресло [250$]", 250, 7},//78
	{1769, "Синее хлопковое кресло [260$]", 260, 7},//79
	{2096, "Кресло-качалка [230$]", 230, 7},//80
	{2292, "Уголковое коричневое кресло [260$]", 260, 7},//81
	//Диваны
	{1702, "Коричнивый шелковый диван [380$]", 380, 8},//82
	{1703, "Черный шелковый диван [380$]",380 , 8},//83
	{1706, "Фиолетовый хлопковый диван [360$]", 360, 8},//84
	{1710, "Простой длинный x2 диван [330$]", 320, 8},//85
	{1712, "Простой длинный диван [310$]", 310, 8},//86
	{1713, "Синий бизнес-диван [360$]", 360, 8},//87
	{1756, "Простой диван в индийском стиле [350$]", 350, 8},//88
	{1757, "Диван в осеннем стиле [350$]", 350, 8},//89
	{1760, "Голубой диван [360$]", 360, 8},//90
	{1761, "Простой деревянный диван [360$]", 360, 8},//91
	{1763, "Простой цветочный диван [360$]", 360, 8},//92
	{1764, "Простой клетчатый диван [340$]", 340, 8},//93
	{1768, "Голубой диван [360$]", 360, 8},//94
	{2290, "Диван из плотного шелка [390$]", 390, 8},//95
	//Стулья
	{1716, "Металлический стул [180$]", 180, 9},//96
	{1805, "Короткий красный стул [190$]", 190, 9},//97
	{1746, "Шелковый пуф [220$]", 220, 9},//98
	{2350, "Высокий красный стул [210$]", 210, 9},//99
	{2723, "Рестро металлический стул [180$]", 180, 9},//100
//Декорации
	//Занавески
	{2558, "Закрытые занавески [15$]", 15, 10},//101
	{2559, "Открытые занавески [15$]", 15, 10},//102
	//Флаги
	{2048, "Красный флаг с крестом по диогонали [30$]", 30, 11},//103
	{2614, "2 американских флага [50$]", 50, 11},//104
	{11245, "Американский флаг [40$]", 40, 11},//105
	{2993, "Зелёный флаг [30$]", 30, 11},//106
	//Коврики
	{2631, "Красный мат [130$]", 130, 12},//107
	{2632, "Голубой мат [130$]", 130, 12},//108
	{1828, "Тигровый ковер [300$]", 300, 12},//109
	{2815, "Фиолетовый коврик [100$]", 100, 12},//110
	{2817, "Голубой коврик [100$]", 100, 12},//111
	{2818, "Красно-оранжевый коврик [100$]", 100, 12},//112
	{2833, "Домашний ковер - 1 [150$]", 150, 12},//113
	{2834, "Домашний ковер - 2 [150$]", 150, 12},//114
	{2835, "Домашний ковер - 3 [150$]", 150, 12},//115
	{2836, "Домашний ковер - 4 [150$]", 150, 12},//116
	{2841, "Овальный синий коврик [130$]", 130, 12},//117
	{2842, "Розовый ковер [120$]", 120, 12},//118
	{2847, "Желтоватый ковер [120$]", 120, 12},//119
	//Полотенца
	{1640, "Зеленое полотенце в полоску [40$]", 40, 13},//120
	{1641, "Синее полотенце [40$]", 40, 13},//121
	{1642, "Красное полотенце [40$]", 40, 13},//122
	{1643, "Желтое полотенце [40$]", 40, 13},//123
	//Растения
    {644, "Зеленое растение в горшке - 1 [60$]", 60, 14},//124
	{948, "Сухая трава в большом белом горшке [80$]", 80, 14},//125
	{1807, "Фотогоршки [30$]", 30, 14},//1216
	{2240, "Сухая трава в большом красном горшке [80$]", 80, 14},//127
	{2241, "Растение в горшке [40$]", 40, 14},//128
	{2244, "Растение в самодельном горшке [45$]", 45, 14},//129
	{2245, "Красные цветы в миске [50$]", 50, 14},//130
	{2246, "Белая ваза [30$]", 30, 14},//131
	{2247, "Восточные растения в стеклянной вазе [50$]", 50, 14},//132
	{2249, "Восточные цветы в вазе [45$]", 45, 14},//133
	{2251, "Восточные цветы в синей вазе [45$]", 45, 14},//134
	{2252, "Маленькая миска с растениями [40$]", 40, 14},//135
	{2811, "Зеленое растение в горшке - 2 [60$]", 60, 14},//136
	//плакаты
	{2049, "Цель окрашена в синий цвет [20$]", 20, 15},//137
	{2050, "Преступник позади жертвы [40$]", 40, 15},//138
	{2051, "Преступник поделен на секторы для мишеней [50$]", 50, 15},//139
	//рамки
	{2254, "Мутное желтое авто [60$]", 60, 16},//140
	{2255, "Голая девушка [90$]", 90, 16},//141
	{2256, "Пальмы [70$]", 70, 16},//142
	{2257, "Разноцветные квадраты [110$]", 110, 16},//143
	{2258, "Город [100$]", 100, 16},//144
	{2259, "Боулинг [80$]", 80, 16},//145
	{2260, "Черно-белая лодка [50$]", 50, 16},//146
	{2261, "Черно-белый мост [50$]", 50, 16},//147
	{2262, "Черно-белый город [50$]", 50, 16},//148
	{2264, "Черно-белый пляж [50$]", 50, 16},//149
	{2276, "Мост [70$]", 70, 16},//150
//Развлечения
	//Спортивные развлечения
    {1985, "Боксёрская груша [310$]", 310, 17},//151
    {2627, "Беговая дорожка [890$]", 890, 17},//152
    {2628, "Силовой центр [900$]", 900, 17},//153
    {2629, "Силовая скамья [600$]", 600, 17},//154
    {2916, "Одна гантеля [200$]", 200, 17},//155
    {2915, "Гантели [290$]", 290, 17},//156
	{2630, "Велотренажер [750$]", 750, 17},//157
    {2964, "Синий бильярдный стол [800$]", 800, 17},//158
    {338, "Кий [150$]", 150, 17},//159
    {3003, "Белый шар [15$]", 15, 17},//160
    {3106, "Черный шар [15$]", 15, 17},//161
    {3105, "Красный шар [15$]", 15, 17},//162
    {3104, "Зеленый шар [15$]", 15, 17},//163
    {3103, "Оранжевый шар [15$]", 15, 17},//164
    {3102, "Синий шар [15$]", 15, 17},//165
    {3101, "Красный шар [15$]", 15, 17},//166
    {3100, "Синий шар [15$]", 15, 17},//167
    {3002, "Желтый шар [15$]", 15, 17},//168
    {2965, "Треугольник для шаров [30$]", 30, 17},//169
    {3497, "Настенное баскетбольное кольцо [230$]", 230, 17},//170
    {1946, "Баскетбольный мяч [90$]", 90, 17},//171
    //Телевизоры
    {14772, "Маленький черный телевизор [390$]", 390, 18},//172
    {1748, "Деревянный телевизор - 1 [310$]", 310, 18},//173
    {1747, "Деревянный телевизор - 2 [310$]", 310, 18},//174
    {1429, "Сломанный телевизор [100$]", 100, 18},//175
    {1749, "Черный квадратный телевизор [330$]", 330, 18},//176
    {1781, "Светло-черный телевизор [400$]", 400, 18},//177
    {1751, "Белый деревянный телевизор [330$]", 330, 18},//178
    {1786, "Широкий черный телевизор [460$]", 460, 18},//179
    {1792, "Темный телевизор в виде трапеции [370$]", 370, 18},//180
    {2224, "Круглый телевизор [500$]", 500, 18},//181
    {2596, "Черный телевизор с DVD [430$]", 430, 18},//182
    {14532, "Черный телевизор с DVD на стойке [470$]", 470, 18},//183
    {19786, "Ж/К Телевизор [500$]", 500, 18},
	//Игровая техника
	{1515, "Игровой автомат для покера [800$]", 800, 19},//184
	{2681, "Go Go Space Monkey Arcade Machine [400$]", 400, 19},//185
	{2778, "Bee Be Gone Arcade Machine [400$]", 400, 19},//186
	{2779, "Duality Arcade Machine [400$]", 400, 19},//187
	{2028, "Игровая приставка [140$]", 140, 19},//188
	{19893, "Лаптоп [1600$]", 1600, 19},//188
	//DVD
	{1782, "HI-DE DVD [170$]", 170, 20},//189
	{1783, "DVR620 DVD Player [170$]", 170, 20},//190
	{1785, "Sunny DVD [170$]", 170, 20},//191
	{1787, "BD655 Blu-Ray [190$]", 190, 20},//192
	{1788, "BD670 Blu-Ray [190$]", 190, 20},//193
	{1790, "DVR620 DVD [170$]", 170, 20},//194
	//Стерео
	{1809, "Стерео система - 1[150$]", 150, 21},//195
	{2099, "Стерео система с колонками [200$]", 200, 21},//196
	{2102, "Черный ретро бумбокс [170$]", 170, 21},//197
	{2103, "Белый бумбокс [170$]", 170, 21},//198
	{2104, "Стерео система - 2 [162$]", 162, 21},//199
	{2226, "Дизайнерский бумбокс [180$]", 180, 21},//200
	//Колонки
	{1840, "Низкая белая колонка [50$]", 50, 22},//201
	{2229, "Высокая черная колонка [80$]", 80, 22},//202
	{2230, "Высокая деревянная колонка [70$]", 70, 22},//203
	{2231, "Деревянный усилитель [68$]", 68, 22},//204
	{2232, "Черный усилитель [68$]", 68, 22},//205
	{2233, "Современная колонка [100$]", 100, 22},//206
//Освещение
	//Лампы
	{2238, "Лавовая лампа [100$]", 100, 23},//207
	{2196, "Офисная лампа [90$]", 90, 23},//208
	{2726, "Красная лампа [70$]", 70, 23},//209
	{3534, "Летающий фонарик [50$]", 50, 23},//210
	//Бра
	{2178, "Бра в форме солнца [60$]", 60, 24},//211
	{1731, "Серая бра [70$]", 70, 24},//212
	{921, "Бра из подъезда [30$]", 30, 24},//213
	//Надвесные лампы
	{2702, "Маленькая лампочка [40$]", 40, 25},//214
	{2076, "Белая лампа [50$]", 50, 25},//215
	{2075, "Длинная красная лампа [80$]", 80, 25},//216
	{2074, "Обычная лампочка [20$]", 20, 25},//217
	{2073, "Клетчатая лампа [80$]", 80, 25},//218
	{1734, "Шарообразная лампа [70$]", 70, 25},//219
	{16780, "Лампа с вентилятором [150$]", 150, 25},//220
//Сантехника
	//Унитазы
	{2514, "Белый унитаз - 1 [130$]", 130, 26},//221
	{2521, "Прямой металлический унитаз [150$]", 150, 26},//222
	{2525, "Унитаз с серой крышкой [140$]", 140, 26},//223
	{2528, "Унитаз с деревянной крышкой [135$]", 135, 26},//224
	{2738, "Белый унитаз - 2 [140$]", 140, 26},//225
	//Раковины
	{2013, "Раковина Мэгги Ко. [127$]", 127, 27},//226
	{2130, "Красная раковина [127$]", 127, 27},//227
	{2132, "Кремовая раковина [120$]", 120, 27},//228
	{2136, "Раковина Стерлин Ко. [130$]", 130, 27},//229
	{2150, "Основа металлической раковины [100$]", 100, 27},//230
	{2336, "Деревянная зеленая раковина [120$]", 120, 27},//231
	{2518, "Белая раковина - 1 [150$]", 150, 27},//232
	{2523, "Белая раковина - 2 [150$]", 150, 27},//233
	{2524, "Белая раковина - 3 [150$]", 150, 27},//234
	{2739, "Белая раковина - 4 [150$]", 150, 27},//235
	//Душ
	{2517, "Стеклянный душ [300$]", 300, 28},//236
	{2520, "Темный металлический душ [320$]", 320, 28},//237
	{2527, "Душ с занавеской [350$]", 350, 28},//238
	//Ванны
	{2097, "Ванна Спранк [250$]", 250, 29},//239
	{2516, "Белая прямоугольная ванна - 1 [300$]", 300, 29},//240
	{2519, "Белая прямоугольная ванна - 2 [300$]",300 , 29},//241
	{2522, "Деревянная ванна с занавеской [270$]", 270, 29},//242
	{2526, "Деревянная ванна [250$]", 250, 29},//243
//Хранилища
	//Сейфы
	{2332, "Сейф [1000$]", 1000, 30},//244
	//Книжные шкафы
	{1742, "Полу-пустой книжный шкаф [180$]", 180, 31},//245
	{2608, "Трехуровневая книжная полка [270$]", 270, 31},//246
	{14455, "Большой книжный шкаф [200$]", 200, 31},//247
	//Шкафы для одежды
	{1417, "Обычный деревянный шкаф [250$]", 250, 32},//248
	{2329, "Большой светлый шкаф - 1 [250$]", 250, 32},//249
	{2088, "Большой светлый шкаф - 2 [250$]", 250, 32},//250
	{2087, "Комод из светлого дерева [230$]", 230, 32},//251
	{2025, "Большой светлый шкаф - 3 [250$]", 250, 32},//252
	{2021, "Розоватая тумбочка [220$]", 220, 32},//253
	{2020, "Розоватый комод [230$]", 230, 32},//254
	{1743, "Стильный деревянный комод [260$]", 260, 32},//255
	{1741, "Большой светлый комод [240$]", 240, 32},//256
	{1740, "Светлая тумбочка [220$]", 220, 32},//257
	{2204, "Темный шкаф [240$]", 240, 32},//258
	//Шкафчики
	{2197, "Металлический шкафчик [180$]", 180, 33},//259
	{2007, "Двойной металлический шкафчик [220$]", 220, 33},//260
	{2065, "Зеленоватый шкафчик [190$]", 190, 33},//261
	{2066, "Коричневый шкафчик [190$]", 190, 33},//262
	{2067, "Сиреневатый шкафчик [190$]", 190, 33},//263
	{2163, "Настенный шкафчик [190$]", 190, 33},//264
	{2167, "Большой шкафчик [190$]", 190, 33},//265
	//Кладовые
	{2158, "Кладовая из красного дерева [210$]", 210, 34},//266
	{2153, "Кладовая из белоснежного дерева [210$]", 210, 34},//267
	{2145, "Старая кладовая [210$]", 210, 34},//268
	{2141, "Кремовая кладовая [210$]", 210, 34},//269
	{2140, "Кладовая Стерлин Ко. [210$]", 210, 34},//270
	{2128, "Красная кладовая [210$]", 210, 34},//271
//Столы
	//Обеденные столы
	{2357, "Длинный деревянный стол [170$]", 170, 35},//272
	{2118, "Мраморный стол [150$]", 150, 35},//273
	{2117, "Сосновый стол [160$]", 160, 35},//274
	{2115, "Светлый стол [160$]", 160, 35},//275
	{2110, "Обычный стол [130$]", 130, 35},//276
	{2080, "Стол из красного дерева [150$]", 150, 35},//277
	{2031, "Стильный стол из светлого дерева [160$]", 160, 35},//278
	{2029, "Стол из бука [160$]", 160, 35},//279
	{1770, "Изрисованный белый стол [120$]", 120, 35},//280
	{1737, "Обычный стол из темного дерева [140$]", 140, 35},//281
	{15037, "Стол с телевизором [300$]", 300, 35},//282
	//Кофейные столики
	{1813, "Белый столик [130$]", 130, 36},//283
	{1814, "Дубовый столик [150$]", 150, 36},//284
	{1815, "Стильный круглый столик - 1 [170$]", 170, 36},//285
	{1817, "Простой светлый столик [160$]", 160, 36},//286
	{1818, "Дубовый столик [160$]", 160, 36},//287
	{1819, "Стильный круглый столик - 2 [130$]", 130, 36},//288
	{1820, "Обычный круглый столик [150$]", 150, 36},//289
	{1822, "Стеклянный столик из красного дерева [170$]", 170, 36},//290
	{1823, "Обычный столик из красного дерева [140$]", 140, 36},//291
	{2126, "Большой столик из красного дерева [170$]", 170, 36},//292
	//Кухонные шкафчики
	{2014, "Шкафчик Мегги Ко. (Ручка слева) [190$]", 190, 37},//293
	{2015, "Шкафчик Мегги Ко. (Ручка справа) [190$]", 190, 37},//294
	{2016, "Шкафчик Мегги Ко. [190$]", 190, 37},//295
	{2022, "Шкафчик Мегги Ко. (Уголок) [190$]", 190, 37},//296
	{2129, "Красный шкафчик [160$]", 160, 37},//297
	{2304, "Красный шкафчик (Уголок) [160$]", 160, 37},//298
	{2133, "Кремовый шкафчик [150$]", 150, 37},//299
	{2137, "Шкафчик Стерлин Ко. [170$]", 170, 37},//300
	{2138, "Шкафчик Стерлин Ко. (1 дверка) [170$]", 170, 37},//301
	{2305, "Красный Стерлин Ко. (Уголок) [170$]", 170, 37},//302
	{2142, "Старый шкафчик [150$]", 150, 37},//303
	{2151, "Белый шкафчик - 1 [150$]", 150, 37},//304
	{2152, "Белый шкафчик - 2 [150$]", 150, 37},//305
	{2155, "Белый шкафчик - 3 [150$]", 150, 37},//306
	{2156, "Шкафчик из красного дерева (x2) [170$]", 170, 37},//307
	{2159, "Шкафчик из красного дерева [150$]", 150, 37},//308
	//Стеклянные шкафы
	{2078, "Стеклянный шкаф из красного дерева [250$]", 250, 38},//309
	{2461, "Кубический прозрачный шкаф [170$]", 170, 38},//310
	{2460, "Длинный стеклянный шкаф [190$]", 190, 38},//311
	{2046, "Обычный старый шкаф [150$]", 150, 38},//312
//Разное
	//Одежда
	{2374, "Синие рубашки в клетку (вешкалка) [200$]", 200, 39},//313
	{2377, "Синие брюки (вешкалка) [200$]", 200, 39},//314
	{2378, "Синие джинсы (вешкалка) [200$]", 200, 39},//315
	{2383, "Желтые свитеры (вешкалка) [200$]", 200, 39},//316
	{2384, "Белые брюки (сложены) [200$]", 200, 39},//317
	{2386, "Синие джинсы (сложены) [200$]", 200, 39},//318
	{2389, "Красное-белые олимпийки (вешкалка) [200$]", 200, 39},//319
	{2390, "Зеленые брюки (вешкалка) [200$]", 200, 39},//320
	{2391, "Белые брюки (вешкалка) [200$]", 200, 39},//321
	{2396, "Кимоно (вешалка) [200$]", 200, 39},//322
	{2399, "Белые кофты (вешалка) [200$]", 200, 39},//323
	{2689, "Белая кофта `ROKSTAR` [200$]", 200, 39},//324
	{2704, "Черно-оранжевая кофта `12` [200$]", 200, 39},//325
	{2845, "Разбросанная одежда [200$]", 200, 39},//326
	//Выпивка
	{1664, "Вино [150$]", 150, 40},//327
	{2958, "Темное Пиво - 1 [80$]", 80, 40},//328
	{1486, "Светлое пиво - 1 [60$]", 60, 40},//329
	{1543, "Темное пиво - 2 [80$]", 80, 40},//330
	{1544, "Светлое пиво - 2 [60$]", 60, 40},//331
	{19823, "Виски [160$]", 160, 40},//331
	{1520, "Jack Daniels [60$]", 60, 40},//331
	{1666, "Рюмка [20$]", 20, 40},//331
	{1667, "Бокал вина [50$]", 50, 40},//331
	//Еда
	{2821, "Коко Попс [50$]", 50, 41},//332
	{2837, "2 гамбургера и 2 спранка [80$]", 80, 41},//333
	{2856, "2 упаковки молока [50$]", 50, 41},//334
	{2861, "2 упаковки лапши [60$]", 60, 41},//335
	{19580, "Пицца [70$]", 70, 41},//341
	//Доски
	{2404, "Доска для серфинга `R` [600$]", 600, 42},//336
	{3077, "Школьная доска [320$]", 320, 42},//337
	{2737, "Голубая доска [320$]", 320, 42},//338
	{2616, "Серая доска [320$]", 320, 42},//339
	{2612, "Доска с заметками [330$]", 330, 42},//340
	{19878, "Скейтборд [30$]", 330, 42},//340
	//Ограждения
	{997, "Ограждение для велосипеда [130$]", 130, 43},//341
	{1228, "Ограждение для ремонта дороги [180$]", 180, 43},//342
	{1447, "Деревянный коричневый забор [150$]", 150, 43},//343
	{1408, "Деревянный белый забор [150$]", 150, 43},//344
	{1419, "Красивый металлический забор [210$]", 210, 43},//345
	{970, "Обычный металлический забор [220$]", 220, 43},//346
	{2773, "Красная оградительная лента [170$]", 170, 43},//347
	//Прочее
	{19871, "Шестр для стриптиза [130$]", 130, 44},//341
	{19817, "Эстакада [830$]", 830, 44},//341
	{11725, "Камин [800$]", 800, 44},
	//Стены
	{19353, "Бело-розовая стена - 1 [330$]", 330, 45},//341
	{19354, "Мозаичатая стена - 1 [330$]", 330, 45},//341
	{19355, "Панельная стена - 1 [330$]", 330, 45},//341
	{19356, "Стена из фанеры - 1 [330$]", 330, 45},//341
	{19357, "Гипсокартоновая стена - 1 [330$]", 330, 45},//341
	{19358, "Серо-черная стена - 1 [330$]", 330, 45},//341
	{19359, "Розоватая стена - 1 [330$]", 330, 45},//341
	{19360, "Досчатая стена - 1 [330$]", 330, 45},//341
	{19361, "Оранжевая стена - 1 [330$]", 330, 45},//341
	{19363, "Коричневая стена - 1 [330$]", 330, 45},//341
	{19364, "Кирпичная стена - 1 [330$]", 330, 45},//341
	{19365, "Голубоватая стена - 1 [330$]", 330, 45},//341
	{19366, "Лакированая деревянная стена - 1 [330$]", 330, 45},//341
	{19370, "Фанера - 1 [330$]", 330, 45},//341
	{19373, "Зеленая стена - 1 [330$]", 330, 45},//341
	{19383, "Бело-розовый дверной проем [330$]", 330, 45},//341
	{19384, "Мозаичный дверной проем [330$]", 330, 45},//341
	{19385, "Панельный дверной проем [330$]", 330, 45},//341
	{19386, "Фанерный дверной проем [330$]", 330, 45},//341
	{19387, "Гипсокартоновый дверной проем [330$]", 330, 45},//341
	{19388, "Серо-черный дверной проем [330$]", 330, 45},//341
	{19390, "Оранжевый дверной проем [330$]", 330, 45},//341
	{19392, "Коричневый дверной проем [330$]", 330, 45},//341
	{19393, "Кирпичный дверной проем [330$]", 330, 45},//341
	//Двери
	{1491, "Коричневая дверь [130$]", 130, 46},//341
	{1492, "Зеленая дверь [130$]", 130, 46},//341
	{1493, "Коричневая с окошком дверь [130$]", 130, 46},//341
	{1494, "Фиолетовая дверь [130$]", 130, 46},//341
	{1501, "Деревянная дверь с сеткой [130$]", 130, 46},//341
	{1506, "Белая дверь [130$]", 130, 46},//341
	{1535, "Розовая дверь [130$]", 130, 46},//341
	//Для вечеринок
	{16151, "Бар [730$]", 730, 47},//341
	{1665, "Пепельница с сигарами [20$]", 20, 47},//341
	{1541, "Кран с выпивкой [600$]", 600, 47},//341
	{1488, "Кран с Виски [600$]", 600, 47},//341
	{2188, "Стол для покера - 1 [1200$]", 1200, 47},//341
	{19474, "Стол для покера - 2 [1200$]", 1200, 47},//341
	{19609, "Барабанная установка [1800$]", 1800, 47},//341
	{19580, "Пицца [70$]", 70, 47},//341
	{19572, "Ящик с пунком [70$]", 70, 47},//34
	//Окна/Шторы
	{1649, "Стекло с зеленым оттенком [100$]", 100, 48},//341
	{1651, "Жалюзи [100$]", 100, 48},//341
	{2558, "Закрытые шторы [100$]", 100, 48},//341
	{2559, "Открытые шторы [100$]", 100, 48},//341
	{2560, "Открытые длинные шторы [100$]", 100, 48},//341
	{2561, "Закрытые длинные шторы [100$]", 100, 48},//341
	{3278, "Прозрачное стекло [100$]", 100, 48},//341
	{3851, " Длинное, затемненное стекло[100$]", 100, 48},//341
	//Лестницы
	{1428, "Подъемная лестница mini [300$]", 300, 49},//341
	{1437, "Подъемная лестница long [300$]", 300, 49},//341
	{3399, "Двухъярусная лестница [300$]", 300, 49},//341
	{5130, "Лестница с двумя подъемами [300$]", 300, 49},//341
	{13749, "Закрученная лестница [300$]", 300, 49},//341
	{12950, "Лестница вверх [300$]", 300, 49}//341
};
enum oInfo
{
	fuid,
	fumodelid,
	Float:fuX,
	Float:fuY,
	Float:fuZ,
	Float:fuRX,
	Float:fuRY,
	Float:fuRZ,
	fuworldid,
	fuinteriorid,
	fuName[MAX_PLAYER_NAME],
	fuNameFur[48],
	fuColour[6],
	fuTexture[6]
};
new FurnitureSystem[MAX_FOBJECTS][oInfo];
new FurnitureColours[11] = {0, 0xFF000000, 0xFF0000FF, 0xFF008B00, 0xFFFF0000, 0xFFFFA500, 0xFFA52A2A, 0xFF808080, 0xFFADD8E6, 0xFF808000,0xFFFFFF00};


public OnGameModeInit()
{
    mysql_function_query(connects,"SELECT HIGH_PRIORITY * FROM `furnitures` WHERE `fumodelid` > '0'",true,"f_ObjectsLoad","","");
}



case DIALOG_OBJECTS:
		{
			if(!response) return 1;
			new usingslot2 = GetPVarInt(playerid,"usingslot2");
			if(listitem == 21 || listitem == 20 && usingslot2 > 70)
			{
			    if(usingslot2 < 0) return SCM(playerid,-1,"Ошибка!");
			    new furnstring[1000];
			    GivePVarInt(playerid,"usingslot2",-20);
			    for(new i = usingslot2-20; i < usingslot2; i++)
				{
					if(PlayerInfo[playerid][Slot][i] != 0)
					{
					    if(StrCmp(PlayerInfo[playerid][pName],FurnitureSystem[PlayerInfo[playerid][Slot][i]][fuName])) format(furnstring,sizeof(furnstring),"%s{ffffff}%d) %s\n",furnstring,i+1,FurnitureSystem[PlayerInfo[playerid][Slot][i]][fuNameFur]);
		                else PlayerInfo[playerid][Slot][i] = 0,format(furnstring,sizeof(furnstring),"%s{ffffff}%d) Слот №%d {33AA33}(Свободно)\n",furnstring,i+1,i);
					}
					else format(furnstring,sizeof(furnstring),"%s{ffffff}%d) Слот №%d {33AA33}(Свободно)\n",furnstring,i+1,i);
                    if(i+1 == 20) strcat(furnstring,"Дальше >>>");
					if(i+1 == 40 || i+1 == 60 || i+1 == 80) strcat(furnstring,"Дальше >>>\nНазад <<<");
					if(i+1 == 100) strcat(furnstring,"Назад <<<");
				}
				SPD(playerid, DIALOG_OBJECTS, DIALOG_STYLE_LIST,"Мебель",furnstring, "Выбрать", "Отмена");
			    return true;
			}
			if(listitem == 20)
			{
			    if(usingslot2+20 >= 50 && PlayerInfo[playerid][pVip] < 2 && PlayerInfo[playerid][pDonateALL] < 1000) return SCM(playerid,-1,"Вам не доступны следующие слоты!");
				new furnstring[1000];
			    GivePVarInt(playerid,"usingslot2",20);
			    for(new i = usingslot2+20; i < usingslot2+40; i++)
				{
					if(PlayerInfo[playerid][Slot][i] != 0)
					{
					    if(StrCmp(PlayerInfo[playerid][pName],FurnitureSystem[PlayerInfo[playerid][Slot][i]][fuName])) format(furnstring,sizeof(furnstring),"%s{ffffff}%d) %s\n",furnstring,i+1,FurnitureSystem[PlayerInfo[playerid][Slot][i]][fuNameFur]);
		                else PlayerInfo[playerid][Slot][i] = 0,format(furnstring,sizeof(furnstring),"%s{ffffff}%d) Слот №%d {33AA33}(Свободно)\n",furnstring,i+1,i);
					}
					else format(furnstring,sizeof(furnstring),"%s{ffffff}%d) Слот №%d {33AA33}(Свободно)\n",furnstring,i+1,i);
					if(i+1 == 20) strcat(furnstring,"Дальше >>>");
					if(i+1 == 40 || i+1 == 60 || i+1 == 80) strcat(furnstring,"Дальше >>>\nНазад <<<");
					if(i+1 == 100) strcat(furnstring,"Назад <<<");
					if(i >= 50 && PlayerInfo[playerid][pVip] < 2 && PlayerInfo[playerid][pDonateALL] < 1000) break;
				}
				SPD(playerid, DIALOG_OBJECTS, DIALOG_STYLE_LIST,"Мебель",furnstring, "Выбрать", "Отмена");
			    return true;
			}
			SetPVarInt(playerid,"usingslot",usingslot2+listitem);
			if(usingslot2+listitem >= 50 && PlayerInfo[playerid][pVip] < 2 && PlayerInfo[playerid][pDonateALL] < 1000) return SCM(playerid,-1,"Данные слоты не доступны на Вашем уровне VIP!");
			if(PlayerInfo[playerid][Slot][usingslot2+listitem] != 0)
			{
				format(string,sizeof(string),"Слот №%d {FF6347}(Занято)",usingslot2+listitem);
				if(PlayerInfo[playerid][pVip] < 3 && PlayerInfo[playerid][pDonateALL] < 1500)SPD(playerid,DIALOG_USED,DIALOG_STYLE_LIST,string,"Продать мебель\nПродать мебель игроку\nКупить копию мебели\nИзменить положение\nПереместить мебель к себе","Выбрать","Отмена");
				else SPD(playerid,DIALOG_USED,DIALOG_STYLE_LIST,string,"Продать мебель\nПродать мебель игроку\nКупить копию мебели\nИзменить положение\nПереместить мебель к себе\nНастроить цвет\nНастроить текстуру","Выбрать","Отмена");
			}
			else
			{
				format(string,sizeof(string),"Слот №%d {33AA33}(Свободно)",usingslot2+listitem);
				SPD(playerid,DIALOG_CHOOSETYPE,DIALOG_STYLE_LIST,string,"Техника\nКомфорт\nДекорации\nРазвлечения\nОсвещение\nСантехника\nХранилища\nСтолы\nРазное","Выбрать","Отмена");
			}
			return true;
		}
		
case D_SELL_FURN:
	    {
	        if(!response) return true;
	        if(!strlen(inputtext)) return SPD(playerid,D_SELL_FURN,DIALOG_STYLE_INPUT,"Продажа мебели","{ffffff}Введите ID игрока и сумму, за которую хотите продать мебель, через точку!\n\nПример: 23.300","Продать","Отмена");
			new liet = -1,pop = GetPVarInt(playerid,"SellFurnitureID");
			for(new d = 0;d < 348;d++)
			{
			    if(FurnitureBuy[d][tid] == FurnitureSystem[PlayerInfo[playerid][Slot][pop]][fumodelid])
			    {
			        liet = d;
			        break;
			    }
			}
			if(liet == -1) return SCM(playerid,-1,"Данная модель мебели не обнаружена на сервере!");
			new arrCoordshu[2][10];
			split(inputtext, arrCoordshu, '.');
			new giod = ReturnUser(arrCoordshu[0]);
			if(!IsPlayerConnected(giod)) return SPD(playerid,D_SELL_FURN,DIALOG_STYLE_INPUT,"Продажа мебели","{ffffff}Ошибка! Игрок не подключен!\n\nВведите ID игрока и сумму, за которую хотите продать мебель, через точку!\n\nПример: 23.300","Продать","Отмена");
			if(GetDistanceBetweenPlayers(playerid,giveplayerid) > 3) return SPD(playerid,D_SELL_FURN,DIALOG_STYLE_INPUT,"Продажа мебели","{ffffff}Ошибка! Игрок слишком далеко от Вас!\n\nВведите ID игрока и сумму, за которую хотите продать мебель, через точку!\n\nПример: 23.300","Продать","Отмена");
			if(strval(arrCoordshu[1]) < 0) return SPD(playerid,D_SELL_FURN,DIALOG_STYLE_INPUT,"Продажа мебели","{ffffff}Ошибка! Цена не может быть ниже нуля!\n\nВведите ID игрока и сумму, за которую хотите продать мебель, через точку!\n\nПример: 23.300","Продать","Отмена");
			GetPlayerTransfer[giod] = playerid;
			GetPlayerOption[giod] = strval(arrCoordshu[1]);
			format(string,sizeof(string), "Вы предложили {9DDAF2}%s{ffffff} купить {9DDAF2}%s{ffffff} за {9DDAF2}%d$",PlayerInfo[giod][pMaskName],FurnitureBuy[liet][tablename], GetPlayerOption[giod]);
			SCM(playerid, COLOR_WHITE, string);
			format(string, sizeof(string), "%s предлагает вам купить %s за $%d", PlayerInfo[playerid][pMaskName],FurnitureBuy[liet][tablename],GetPlayerOption[giod]);
			SCM(giod, COLOR_WHITE, string);
			SCM(giod, -1, #ArrivalRP_U"/accept, чтобы согласиться или /cancel");
			SetPVarInt(giod,"Predlojenie",6);
			SetPVarInt(giod,"SellFurnitureID",pop);
			return true;
	    }
	case DIALOG_USED:
		{
			if(!response) return SetPVarInt(playerid,"usingslot",-1);
			new PlanetRP = GetPVarInt(playerid,"usingslot");
            switch(listitem)
			{
			    case 0:
				    {
				        new zyablik = FurnitureSystem[PlayerInfo[playerid][Slot][PlanetRP]][fumodelid],pricefurnslot = -1;
				        for(new el = 0;el < MAX_BUY_FURN;el++)
				        {
				            if(FurnitureBuy[el][tid] == zyablik)
				            {
				                pricefurnslot = el;
				                break;
				            }
				        }
				        if(pricefurnslot == -1) SCM(playerid,-1,"Такой мебели не существует!");
				        else GivePlayerCash(playerid,floatround(FurnitureBuy[pricefurnslot][tableprice]/1.3),"Покупка фурнитуры");
				   		DestroyDynamicObjectEx(furnaobject[PlayerInfo[playerid][Slot][PlanetRP]]);
	               		FurnitureSystem[PlayerInfo[playerid][Slot][PlanetRP]][fuid] = 0;
	              		FurnitureSystem[PlayerInfo[playerid][Slot][PlanetRP]][fumodelid] = 0;
	               		FurnitureSystem[PlayerInfo[playerid][Slot][PlanetRP]][fuX] = 0.0;
	               		FurnitureSystem[PlayerInfo[playerid][Slot][PlanetRP]][fuY] = 0.0;
	               		FurnitureSystem[PlayerInfo[playerid][Slot][PlanetRP]][fuZ] = 0.0;
	             	    FurnitureSystem[PlayerInfo[playerid][Slot][PlanetRP]][fuRX] = 0.0;
	               		FurnitureSystem[PlayerInfo[playerid][Slot][PlanetRP]][fuRY] = 0.0;
	             		FurnitureSystem[PlayerInfo[playerid][Slot][PlanetRP]][fuRZ] = 0.0;
	             	    FurnitureSystem[PlayerInfo[playerid][Slot][PlanetRP]][fuworldid] = 0;
	              		FurnitureSystem[PlayerInfo[playerid][Slot][PlanetRP]][fuinteriorid] = 0;
	              		mysql_format(connects,string,sizeof(string),"UPDATE `furnitures` SET `fumodelid` = '0' WHERE `id` = '%d'",PlayerInfo[playerid][Slot][PlanetRP]);
						mysql_function_query(connects,string,false,"","");
						PlayerInfo[playerid][Slot][PlanetRP] = 0;
						format(string,33,"slot%d",PlanetRP+1);
						SetMySQLInteger(PlayerInfo[playerid][pID],"characters",string,0);
						SetPVarInt(playerid,"usingslot",-1);
				    }
				case 1:
				    {
				        SetPVarInt(playerid,"SellFurnitureID",PlanetRP);
				        SPD(playerid,D_SELL_FURN,DIALOG_STYLE_INPUT,"Продажа мебели","{ffffff}Введите ID игрока и сумму, за которую хотите продать мебель, через точку!\n\nПример: 23.300","Продать","Отмена");
				    }
				case 2:
				    {
				        new liems = -1;
				        for(new el = 0;el < MAX_BUY_FURN;el++)
				        {
				            if(FurnitureBuy[el][tid] == FurnitureSystem[PlayerInfo[playerid][Slot][PlanetRP]][fumodelid])
				            {
				                liems = el;
				                break;
				            }
				        }
				        if(liems == -1) return SCM(playerid,-1,"Такой мебели не существует!");
				        new sykafant = -1;
				        for(new i = 0;i < 100;i++)
				        {
				            if(PlayerInfo[playerid][pVip] == 0 && PlayerInfo[playerid][pDonateALL] < 500 && i >= 10) break;
				            if(PlayerInfo[playerid][pVip] == 1 && PlayerInfo[playerid][pDonateALL] < 1000 && i >= 50) break;
				            //if(PlayerInfo[playerid][pVip] == 2 && PlayerInfo[playerid][pDonateALL] < 1500 && i >= 50) break;
							if(PlayerInfo[playerid][Slot][i] == 0)
							{
							    sykafant = i;
								break;
							}
						}
						if(sykafant == -1) return SCM(playerid,-1,"Нет свободных слотов!");
				        if(PlayerInfo[playerid][pCash] < FurnitureBuy[liems][tableprice]) return SCM(playerid,-1,"У Вас недостаточно денег!");
						SetPVarInt(playerid,"tid",FurnitureBuy[liems][tid]);
			            SetPVarInt(playerid,"usingslot", sykafant);
				        SetPVarInt(playerid,"FurID",liems);
						SetPVarInt(playerid,"objectprice",FurnitureBuy[liems][tableprice]);
						new Float:b_x, Float:b_y, Float:b_z, Float:b_a;
						GetPlayerPos(playerid, Float:b_x, Float:b_y, Float:b_z);
						GetPlayerFacingAngle(playerid, b_a);
						b_x += 2*floatsin(-b_a, degrees);
						b_y += 2*floatcos(-b_a, degrees);
						prevs[playerid] = CreateObject(FurnitureBuy[liems][tid],b_x,b_y,b_z,0.0,0.0,0.0);
			            EditObject(playerid,prevs[playerid]);
						SetPVarFloat(playerid,"FreshFurnitureX",b_x);
						SetPVarFloat(playerid,"FreshFurnitureY",b_y);
						SetPVarFloat(playerid,"FreshFurnitureZ",b_z);
				    }
				case 3:
					{
	                    DestroyDynamicObjectEx(furnaobject[PlayerInfo[playerid][Slot][PlanetRP]]);
						new tyrnik = PlayerInfo[playerid][Slot][PlanetRP];
						editingobject[playerid] = CreateObject(FurnitureSystem[tyrnik][fumodelid],FurnitureSystem[tyrnik][fuX],FurnitureSystem[tyrnik][fuY],FurnitureSystem[tyrnik][fuZ],FurnitureSystem[tyrnik][fuRX],FurnitureSystem[tyrnik][fuRY],FurnitureSystem[tyrnik][fuRZ]);
	                    EditObject(playerid,editingobject[playerid]);
						SetPVarInt(playerid,"usingslot",-1);
						SetPVarInt(playerid,"EditingFurniture",PlayerInfo[playerid][Slot][PlanetRP]);
						new Float:x, Float:y, Float:z;
						GetPlayerPos(playerid, x, y, z);
						SetPVarFloat(playerid,"FreshFurnitureX",FurnitureSystem[tyrnik][fuX]);
						SetPVarFloat(playerid,"FreshFurnitureY",FurnitureSystem[tyrnik][fuY]);
						SetPVarFloat(playerid,"FreshFurnitureZ",FurnitureSystem[tyrnik][fuZ]);
						SetPVarInt(playerid,"tid",0);
					}
				case 4:
					{
	                    new Float:x, Float:y, Float:z;
						GetPlayerPos(playerid, x, y, z);
						new tyrnik = PlayerInfo[playerid][Slot][PlanetRP];
						FurnitureSystem[tyrnik][fuworldid] = GetPlayerVirtualWorld(playerid);
	              		FurnitureSystem[tyrnik][fuinteriorid] = GetPlayerInterior(playerid);
	                    FurnitureSystem[tyrnik][fuX] = x+1;
	               		FurnitureSystem[tyrnik][fuY] = y+1;
	               		FurnitureSystem[tyrnik][fuZ] = z;
	               		DestroyDynamicObjectEx(furnaobject[tyrnik]);
	               		SetPVarInt(playerid,"EditingFurniture",0);
	               		SetPVarInt(playerid,"tid",0);
			            CancelEdit(playerid);
	                    furnaobject[tyrnik] = CreateDynamicObject(FurnitureSystem[tyrnik][fumodelid],x+1,y+1,z,FurnitureSystem[tyrnik][fuRX],FurnitureSystem[tyrnik][fuRY],FurnitureSystem[tyrnik][fuRZ],FurnitureSystem[tyrnik][fuworldid],FurnitureSystem[tyrnik][fuinteriorid],-1,70.0,70.0);
	                    f_ObjectSave(tyrnik);
	                    UpdateObjectMaterial(furnaobject[tyrnik],tyrnik);
						SetPVarInt(playerid,"usingslot",-1);
					}
				case 5:SPD(playerid,D_CHOOSE_COLOR,DIALOG_STYLE_LIST,"Выбор индекса","Индекс №0\nИндекс №1\nИндекс №2\nИндекс №3\nИндекс №4\nИндекс №5","Выбрать","Отмена");
				case 6:SPD(playerid,D_CHOOSE_TEXTURE,DIALOG_STYLE_LIST,"Выбор индекса","Индекс №0\nИндекс №1\nИндекс №2\nИндекс №3\nИндекс №4\nИндекс №5","Выбрать","Отмена");
			}
		}
	//Техника\nКомфорт\nДекорации\nРазвлечения\nОсвещение\nСантехника\nХранилища\nСтолы\nРазное
	case DIALOG_CHOOSETYPE:
		{
			if(!response) return SetPVarInt(playerid,"usingslot",-1);
			//new stringd[1024];
			SetPVarInt(playerid,"CHOOSETYPE",listitem);
			switch(listitem)
			{
			case 0:SPD(playerid,DIALOG_CHOOSETYPE2,DIALOG_STYLE_LIST,"Техника","Холодильники\nПлиты\nМусорки\nНебольшая техника\nМусорные контейнеры","Выбрать","Отмена");
			case 1:SPD(playerid,DIALOG_CHOOSETYPE2,DIALOG_STYLE_LIST,"Комфорт","Кровати\nСтулья\nКресла\nДиваны\nТабуреты","Выбрать","Отмена");
			case 2:SPD(playerid,DIALOG_CHOOSETYPE2,DIALOG_STYLE_LIST,"Декорации","Занавески\nФлаги\nКоврики\nПолотенца\nРастения\nПлакаты\nРамки","Выбрать","Отмена");
			case 3:SPD(playerid,DIALOG_CHOOSETYPE2,DIALOG_STYLE_LIST,"Развлечения","Спортивные развлечения\nТелевизоры\nИгровая техника\nDVD\nСтерео\nКолонки","Выбрать","Отмена");
			case 4:SPD(playerid,DIALOG_CHOOSETYPE2,DIALOG_STYLE_LIST,"Освещение","Лампы\nБра\nНадвесные лампы","Выбрать","Отмена");
			case 5:SPD(playerid,DIALOG_CHOOSETYPE2,DIALOG_STYLE_LIST,"Сантехника","Унитазы\nРаковины\nДуш\nВанны","Выбрать","Отмена");
			case 6:SPD(playerid,DIALOG_CHOOSETYPE2,DIALOG_STYLE_LIST,"Хранилища","Сейфы\nКнижные шкафы\nШкафы для одежды\nШкафчики\nКладовые","Выбрать","Отмена");
			case 7:SPD(playerid,DIALOG_CHOOSETYPE2,DIALOG_STYLE_LIST,"Столы","Обеденные столы\nКофейные столики\nКухонные шкафчики\nСтеклянные шкафы","Выбрать","Отмена");
			case 8:SPD(playerid,DIALOG_CHOOSETYPE2,DIALOG_STYLE_LIST,"Разное","Одежда\nВыпивка\nЕда\nДоски\nОграждения\nПрочее\nСтены\nДвери\nДля вечеринок\nОкна и шторы\nЛестницы","Выбрать","Отмена");
			}
		}
	case DIALOG_CHOOSETYPE2:
		{
			if(!response)
			{
				format(string,sizeof(string),"Слот №%d {33AA33}(Свободно)",GetPVarInt(playerid,"usingslot"));
				SPD(playerid,DIALOG_CHOOSETYPE,DIALOG_STYLE_LIST,string,"Техника\nКомфорт\nДекорации\nРазвлечения\nОсвещение\nСантехника\nХранилища\nСтолы\nРазное","Выбрать","Отмена");
				//SetPVarInt(playerid,"usingslot",-1);
				return true;
			}
			new stringd[1024],Kategory = GetTypeFurniture(GetPVarInt(playerid,"CHOOSETYPE"),listitem),bool:OneMainCounter = false;
			SetPVarInt(playerid,"CHOOSETYPE2",listitem);
			for(new i = 0; i < sizeof(FurnitureBuy); i++)
          	{
          		if(FurnitureBuy[i][tCategory] != Kategory) continue;
          		if(OneMainCounter == false) SetPVarInt(playerid,"MainNubmerFurn",i), OneMainCounter = true;
                if(PlayerInfo[playerid][pAdmin] != 6 && !GetPVarInt(playerid,"imalvaro")) format(stringd, sizeof(stringd), "%s%s\n",stringd,FurnitureBuy[i][tablename]);
                else format(stringd, sizeof(stringd), "%s%s - %d\n",stringd,FurnitureBuy[i][tablename],FurnitureBuy[i][tid]);
			}
			SPD(playerid, DIALOG_TABLE, DIALOG_STYLE_LIST,"Выберите модель",stringd, "Выбрать", "Cancel");
		}
	case DIALOG_TABLE:
		{
			if(!response) return SetPVarInt(playerid,"usingslot",-1);
			new liems = GetPVarInt(playerid,"MainNubmerFurn")+listitem;
			if(PlayerInfo[playerid][pCash] < FurnitureBuy[liems][tableprice]) return SCM(playerid,-1,"У Вас недостаточно денег!");
			SetPVarInt(playerid,"tid",FurnitureBuy[liems][tid]);
            SetPVarInt(playerid,"FurID",liems);
			SetPVarInt(playerid,"objectprice",FurnitureBuy[liems][tableprice]);
			new Float:b_x, Float:b_y, Float:b_z, Float:b_a;
			GetPlayerPos(playerid, Float:b_x, Float:b_y, Float:b_z);
			GetPlayerFacingAngle(playerid, b_a);
			b_x += 2*floatsin(-b_a, degrees);
			b_y += 2*floatcos(-b_a, degrees);
			prevs[playerid] = CreateObject(FurnitureBuy[liems][tid],b_x,b_y,b_z,0.0,0.0,0.0);
            EditObject(playerid,prevs[playerid]);
			SetPVarFloat(playerid,"FreshFurnitureX",b_x);
			SetPVarFloat(playerid,"FreshFurnitureY",b_y);
			SetPVarFloat(playerid,"FreshFurnitureZ",b_z);
		}
	case DIALOG_BUY_F:
		{
		    if(!response)
			{
				SetPVarInt(playerid,"usingslot",-1);
                DestroyObject(prevs[playerid]);
                prevs[playerid] = -1;
                SetPVarInt(playerid,"tid",0);
				return 1;
			}
			if(PlayerInfo[playerid][pCash] < GetPVarInt(playerid,"objectprice"))
			{
				SCM(playerid,-1,#ArrivalRP_$"У Вас не хватает денег на покупку данной мебели!");
				SetPVarInt(playerid,"usingslot",-1);
               	DestroyObject(prevs[playerid]);
               	prevs[playerid] = -1;
               	SetPVarInt(playerid,"tid",0);
				return 1;
			}
			new ArrivalModel = GetPVarInt(playerid,"tid");
			new ArrivelRP = GetPVarInt(playerid,"FurnitureID"),vodka = GetPVarInt(playerid,"usingslot");
			if(PlayerInfo[playerid][Slot][vodka] != 0)
			{
			    new sykafant = -1;
       			for(new i = 0;i < 100;i++)
		        {
          			if(PlayerInfo[playerid][pVip] == 0 && PlayerInfo[playerid][pDonateALL] < 500 && i >= 10) break;
	            	if(PlayerInfo[playerid][pVip] == 1 && PlayerInfo[playerid][pDonateALL] < 1000 && i >= 50) break;
		            //if(PlayerInfo[playerid][pVip] == 2 && PlayerInfo[playerid][pDonateALL] < 1500 && i >= 50) break;
					if(PlayerInfo[playerid][Slot][i] == 0)
					{
	    				sykafant = i;
						break;
					}
				}
				if(sykafant == -1) return SCM(playerid,-1,"Нет свободных слотов!");
			}
			if(ArrivalModel >= 1493 && ArrivalModel <= 1535 && ArrivalModel != 1520)
			{
			    GiveInventory(playerid,672,ArrivelRP);
				if(NoPlaceInvForItem[playerid] == true) SCM(playerid, COLOR_WHITE, "Вы установили дверь и получили ключи от неё. Используйте /door.");
				else
				{
					SetPVarInt(playerid,"usingslot",-1);
	               	DestroyObject(prevs[playerid]);
	               	prevs[playerid] = -1;
	               	SetPVarInt(playerid,"tid",0);
				   	SCM(playerid, COLOR_WHITE, "У Вас нет мета для ключей!");
				   	return true;
				}
			}
			new Float:oX,Float:oY,Float:oZ,Float:rX,Float:rY,Float:rZ,wid = GetPlayerVirtualWorld(playerid),pint = GetPlayerInterior(playerid);
			GetObjectRot(prevs[playerid],rX,rY,rZ);
			GetObjectPos(prevs[playerid],oX,oY,oZ);
			PlayerInfo[playerid][Slot][vodka] = ArrivelRP;
			format(string,33,"slot%d",vodka+1);
			SetMySQLInteger(PlayerInfo[playerid][pID],"characters",string,ArrivelRP);
			FurnitureSystem[ArrivelRP][fuid] = ArrivelRP;
			GivePlayerCash(playerid,-GetPVarInt(playerid,"objectprice"),"Покупка фурнитуры");
			FracBank[2] += floatround(GetPVarInt(playerid,"objectprice")*0.5);
			SaveBankFrac(2);
			FurnitureSystem[ArrivelRP][fumodelid] = ArrivalModel;
			FurnitureSystem[ArrivelRP][fuX] = oX;
			FurnitureSystem[ArrivelRP][fuY] = oY;
			FurnitureSystem[ArrivelRP][fuZ] = oZ;
			FurnitureSystem[ArrivelRP][fuRX] = rX;
			FurnitureSystem[ArrivelRP][fuRY] = rY;
			FurnitureSystem[ArrivelRP][fuRZ] = rZ;
   			FurnitureSystem[ArrivelRP][fuworldid] = wid;
   			FurnitureSystem[ArrivelRP][fuinteriorid] = pint;
   			new bigquery[128];
			for(new d = 0;d < 6;d++)
   			{
   				FurnitureSystem[ArrivelRP][fuTexture][d] = 0;
   				FurnitureSystem[ArrivelRP][fuColour][d] = 0;
   				mysql_format(connects,bigquery,sizeof(bigquery),"UPDATE `furnitures` SET `fuColour%d` = '0',`fuTexture%d` = '0' WHERE `id` = '%d'",d,d,ArrivelRP);
				mysql_function_query(connects,bigquery,false,"","");
			}
			strmid(FurnitureSystem[ArrivelRP][fuName], PlayerInfo[playerid][pName], 0, strlen(PlayerInfo[playerid][pName]), MAX_PLAYER_NAME);
   			strmid(FurnitureSystem[ArrivelRP][fuNameFur], FurnitureBuy[GetPVarInt(playerid,"FurID")][tablename], 0, strlen(FurnitureBuy[GetPVarInt(playerid,"FurID")][tablename]), 48);
   			f_ObjectSave(ArrivelRP);
			//mysql_insert_id()
			DestroyObject(prevs[playerid]);
            SetPVarInt(playerid,"tid",0);
            prevs[playerid] = -1;
          	furnaobject[ArrivelRP] = CreateDynamicObject(FurnitureSystem[ArrivelRP][fumodelid],FurnitureSystem[ArrivelRP][fuX],FurnitureSystem[ArrivelRP][fuY],FurnitureSystem[ArrivelRP][fuZ],FurnitureSystem[ArrivelRP][fuRX],FurnitureSystem[ArrivelRP][fuRY],FurnitureSystem[ArrivelRP][fuRZ],FurnitureSystem[ArrivelRP][fuworldid],FurnitureSystem[ArrivelRP][fuinteriorid],-1,70.0,70.0);
			UpdateObjectMaterial(furnaobject[ArrivelRP],ArrivelRP);
			SCM(playerid,-1,#ArrivalRP_$"Вы купили мебель!");
		}
		
case D_CHOOSE_TEXTURE2:
	    {
	        if(!response) return SPD(playerid,D_CHOOSE_TEXTURE,DIALOG_STYLE_LIST,"Выбор индекса","Индекс №0\nИндекс №1\nИндекс №2\nИндекс №3\nИндекс №4\nИндекс №5","Выбрать","Отмена");
			//if(ShowPlayerVehicles[playerid][listitem] == 101) return SPD(playerid,D_CHOOSE_TEXTURE76,DIALOG_STYLE_INPUT,"Настройка текстуры","{ffffff}Введите название библиотеки текстуры, название самой текстуры и объект, у которого взята эта текстуры через '*'\nНапример:sw_bankint*woodfloor1*13007 - что-то вроде паркета\nДанные текстуры можно найти на сайте.","Выбрать","Отмена");
			new tyrnik = PlayerInfo[playerid][Slot][GetPVarInt(playerid,"usingslot")];
	        if(PlayerInfo[playerid][pVip] < 3 && PlayerInfo[playerid][pDonateALL] < 1500) SPD(playerid,DIALOG_USED,DIALOG_STYLE_LIST,string,"Продать мебель\nПродать мебель игроку\nКупить копию мебели\nИзменить положение\nПереместить мебель к себе","Выбрать","Отмена");
			else SPD(playerid,DIALOG_USED,DIALOG_STYLE_LIST,string,"Продать мебель\nПродать мебель игроку\nКупить копию мебели\nИзменить положение\nПереместить мебель к себе\nНастроить цвет\nНастроить текстуру","Выбрать","Отмена");
			new bigquery[128];
			if(listitem == 0)
			{
				FurnitureSystem[PlayerInfo[playerid][Slot][GetPVarInt(playerid,"usingslot")]][fuTexture][GetPVarInt(playerid,"usingslot2")] = 0;
				UpdateObjectMaterial(furnaobject[tyrnik],tyrnik,GetPVarInt(playerid,"usingslot2"));
				mysql_format(connects,bigquery,sizeof(bigquery),"UPDATE `furnitures` SET `fuTexture%d` = '0' WHERE `id` = '%d'",GetPVarInt(playerid,"usingslot2"),tyrnik);
				mysql_function_query(connects,bigquery,false,"","");
				return true;
			}
			FurnitureSystem[PlayerInfo[playerid][Slot][GetPVarInt(playerid,"usingslot")]][fuTexture][GetPVarInt(playerid,"usingslot2")] = listitem-1;
	        UpdateObjectMaterial(furnaobject[tyrnik],tyrnik,GetPVarInt(playerid,"usingslot2"));
			mysql_format(connects,bigquery,sizeof(bigquery),"UPDATE `furnitures` SET `fuTexture%d` = '%d' WHERE `id` = '%d'",GetPVarInt(playerid,"usingslot2"),listitem-1,tyrnik);
			mysql_function_query(connects,bigquery,false,"","");
			SPD(playerid,D_CHOOSE_TEXTURE,DIALOG_STYLE_LIST,"Выбор индекса","Индекс №0\nИндекс №1\nИндекс №2\nИндекс №3\nИндекс №4\nИндекс №5","Выбрать","Отмена");
			return true;
	    }
case D_CHOOSE_COLOR:
		{
			if(!response)
			{
			    format(string,sizeof(string),"Слот №%d {FF6347}(Занято)",GetPVarInt(playerid,"usingslot"));
				if(PlayerInfo[playerid][pVip] < 3 && PlayerInfo[playerid][pDonateALL] < 1500) SPD(playerid,DIALOG_USED,DIALOG_STYLE_LIST,string,"Продать мебель\nПродать мебель игроку\nКупить копию мебели\nИзменить положение\nПереместить мебель к себе","Выбрать","Отмена");
				else SPD(playerid,DIALOG_USED,DIALOG_STYLE_LIST,string,"Продать мебель\nПродать мебель игроку\nКупить копию мебели\nИзменить положение\nПереместить мебель к себе\nНастроить цвет\nНастроить текстуру","Выбрать","Отмена");
				return true;
			}
			SetPVarInt(playerid,"usingslot2",listitem);
			SPD(playerid,D_CHOOSE_COLOR2,DIALOG_STYLE_LIST,"Настройка цвета","Сбросить цвет\nЧерный\nСиний\nЗеленый\nКрасный\nОранжевый\nКоричневый\nСерый\nСветло-синий\nОливковый\nЖелтый","Выбрать","Отмена");
            return true;
   		}
	case D_CHOOSE_COLOR2:
	    {
	        if(!response) return SPD(playerid,D_CHOOSE_COLOR,DIALOG_STYLE_LIST,"Выбор индекса","Индекс №0\nИндекс №1\nИндекс №2\nИндекс №3\nИндекс №4\nИндекс №5","Выбрать","Отмена");
	        new tyrnik = PlayerInfo[playerid][Slot][GetPVarInt(playerid,"usingslot")];
	        FurnitureSystem[PlayerInfo[playerid][Slot][GetPVarInt(playerid,"usingslot")]][fuColour][GetPVarInt(playerid,"usingslot2")] = listitem;
	        UpdateObjectMaterial(furnaobject[tyrnik],tyrnik,GetPVarInt(playerid,"usingslot2"));
	        new bigquery[128];
			mysql_format(connects,bigquery,sizeof(bigquery),"UPDATE `furnitures` SET `fuColour%d` = '%d' WHERE `id` = '%d'",GetPVarInt(playerid,"usingslot2"),listitem,tyrnik);
			mysql_function_query(connects,bigquery,false,"","");
			SPD(playerid,D_CHOOSE_COLOR2,DIALOG_STYLE_LIST,"Настройка цвета","Сбросить цвет\nЧерный\nСиний\nЗеленый\nКрасный\nОранжевый\nКоричневый\nСерый\nСветло-синий\nОливковый\nЖелтый","Выбрать","Отмена");
			return true;
	    }
case D_CHOOSE_TEXTURE3:
		{
			if(!response)
	        {
	            new listitems[2048],indix = 0;
				for(new i=0; i<MAX_FOBJECTS; i++)
				{
					if(FurnitureSystem[i][fuid] == 0) continue;
					if(FurnitureSystem[i][fumodelid] == 0) continue;
					if(GetPlayerVirtualWorld(playerid) != FurnitureSystem[i][fuworldid]) continue;
		  			if(GetPlayerInterior(playerid) != FurnitureSystem[i][fuinteriorid]) continue;
					new Float:odist = GetPlayerDistanceFromPoint(playerid, FurnitureSystem[i][fuX], FurnitureSystem[i][fuY], FurnitureSystem[i][fuZ]);
					if(odist > 5) continue;
					format(string,sizeof(string),"%i) {33AA33}%s{ffffff} | {F5DEB3}%s{ffffff} | %f\n",indix+1,FurnitureSystem[i][fuNameFur],FurnitureSystem[i][fuName],odist);
					strcat(listitems,string);
					ShowPlayerVehicles[playerid][indix] = i;
					indix++;
				}
				if(indix == 0) return SCM(playerid,-1,"Поблизости нет мебели!");
				SPD(playerid, D_DELETE_FURNIUTRE, DIALOG_STYLE_LIST, "Ближайшая мебель",listitems,"Выбрать","Отмена");
				return true;
	        }
			SetPVarInt(playerid,"usingslot2",listitem);
			new strong[400];
			format(strong,sizeof(strong),"Сбросить цвет\n");
			for(new p = 0;p < MAX_TEXTURES;p++)// ccName TEXTURE_INFO
			{
				format(strong,sizeof(strong),"%s%s\n",strong,TEXTURE_INFO[p][faName]);
			}
			format(strong,sizeof(strong),"%sВыбрать свою текстуру",strong);
			SPD(playerid,D_CHOOSE_TEXTURE4,DIALOG_STYLE_LIST,"Настройка текстуры",strong,"Выбрать","Отмена");
            return true;
   		}
   	case D_CHOOSE_TEXTURE4:
	    {
	        if(!response) return SPD(playerid,D_CHOOSE_TEXTURE3,DIALOG_STYLE_LIST,"Выбор индекса","Индекс №0\nИндекс №1\nИндекс №2\nИндекс №3\nИндекс №4\nИндекс №5","Выбрать","Отмена");
	        new retElement = GetPVarInt(playerid,"MySQLID");
         	new bigquery[128], listitems[2048],indix = 0;
			for(new i=0; i<MAX_FOBJECTS; i++)
			{
				if(FurnitureSystem[i][fuid] == 0) continue;
				if(FurnitureSystem[i][fumodelid] == 0) continue;
				if(GetPlayerVirtualWorld(playerid) != FurnitureSystem[i][fuworldid]) continue;
		  		if(GetPlayerInterior(playerid) != FurnitureSystem[i][fuinteriorid]) continue;
				new Float:odist = GetPlayerDistanceFromPoint(playerid, FurnitureSystem[i][fuX], FurnitureSystem[i][fuY], FurnitureSystem[i][fuZ]);
				if(odist > 5) continue;
				format(string,sizeof(string),"%i) {33AA33}%s{ffffff} | {F5DEB3}%s{ffffff} | %f\n",indix+1,FurnitureSystem[i][fuNameFur],FurnitureSystem[i][fuName],odist);
				strcat(listitems,string);
				ShowPlayerVehicles[playerid][indix] = i;
				indix++;
			}
			if(indix != 0) SPD(playerid, D_DELETE_FURNIUTRE, DIALOG_STYLE_LIST, "Ближайшая мебель",listitems,"Выбрать","Отмена");
			if(listitem == 0)
			{
				FurnitureSystem[retElement][fuTexture][GetPVarInt(playerid,"usingslot2")] = 0;
				UpdateObjectMaterial(furnaobject[retElement],retElement,GetPVarInt(playerid,"usingslot2"));
				mysql_format(connects,bigquery,sizeof(bigquery),"UPDATE `furnitures` SET `fuTexture%d` = '0' WHERE `id` = '%d'",GetPVarInt(playerid,"usingslot2"),retElement);
				mysql_function_query(connects,bigquery,false,"","");
				return true;
			}
			FurnitureSystem[retElement][fuTexture][GetPVarInt(playerid,"usingslot2")] = listitem-1;
	        UpdateObjectMaterial(furnaobject[retElement],retElement,GetPVarInt(playerid,"usingslot2"));
			mysql_format(connects,bigquery,sizeof(bigquery),"UPDATE `furnitures` SET `fuTexture%d` = '%d' WHERE `id` = '%d'",GetPVarInt(playerid,"usingslot2"),listitem-1,retElement);
			mysql_function_query(connects,bigquery,false,"","");
			return true;
	    }
	case D_CHOOSE_COLOR3:
		{
			if(!response)
	        {
	            new listitems[2048],indix = 0;
				for(new i=0; i<MAX_FOBJECTS; i++)
				{
					if(FurnitureSystem[i][fuid] == 0) continue;
					if(FurnitureSystem[i][fumodelid] == 0) continue;
					if(GetPlayerVirtualWorld(playerid) != FurnitureSystem[i][fuworldid]) continue;
		  			if(GetPlayerInterior(playerid) != FurnitureSystem[i][fuinteriorid]) continue;
					new Float:odist = GetPlayerDistanceFromPoint(playerid, FurnitureSystem[i][fuX], FurnitureSystem[i][fuY], FurnitureSystem[i][fuZ]);
					if(odist > 5) continue;
					format(string,sizeof(string),"%i) {33AA33}%s{ffffff} | {F5DEB3}%s{ffffff} | %f\n",indix+1,FurnitureSystem[i][fuNameFur],FurnitureSystem[i][fuName],odist);
					strcat(listitems,string);
					ShowPlayerVehicles[playerid][indix] = i;
					indix++;
				}
				if(indix != 0) SPD(playerid, D_DELETE_FURNIUTRE, DIALOG_STYLE_LIST, "Ближайшая мебель",listitems,"Выбрать","Отмена");
				return true;
	        }
			SetPVarInt(playerid,"usingslot2",listitem);
			SPD(playerid,D_CHOOSE_COLOR4,DIALOG_STYLE_LIST,"Настройка цвета","Сбросить цвет\nЧерный\nСиний\nЗеленый\nКрасный\nОранжевый\nКоричневый\nСерый\nСветло-синий\nОливковый\nЖелтый","Выбрать","Отмена");
            return true;
   		}
	case D_CHOOSE_COLOR4:
	    {
	        if(!response) return SPD(playerid,D_CHOOSE_COLOR3,DIALOG_STYLE_LIST,"Выбор индекса","Индекс №0\nИндекс №1\nИндекс №2\nИндекс №3\nИндекс №4\nИндекс №5","Выбрать","Отмена");
	        new retElement = GetPVarInt(playerid,"MySQLID");
         	FurnitureSystem[retElement][fuColour][GetPVarInt(playerid,"usingslot2")] = listitem;
	        UpdateObjectMaterial(furnaobject[retElement],retElement,GetPVarInt(playerid,"usingslot2"));
	        new bigquery[128];
			mysql_format(connects,bigquery,sizeof(bigquery),"UPDATE `furnitures` SET `fuColour%d` = '%d' WHERE `id` = '%d'",GetPVarInt(playerid,"usingslot2"),listitem,retElement);
			mysql_function_query(connects,bigquery,false,"","");
			new listitems[2048],indix = 0;
			for(new i=0; i<MAX_FOBJECTS; i++)
			{
				if(FurnitureSystem[i][fuid] == 0) continue;
				if(FurnitureSystem[i][fumodelid] == 0) continue;
				if(GetPlayerVirtualWorld(playerid) != FurnitureSystem[i][fuworldid]) continue;
		  		if(GetPlayerInterior(playerid) != FurnitureSystem[i][fuinteriorid]) continue;
				new Float:odist = GetPlayerDistanceFromPoint(playerid, FurnitureSystem[i][fuX], FurnitureSystem[i][fuY], FurnitureSystem[i][fuZ]);
				if(odist > 5) continue;
				format(string,sizeof(string),"%i) {33AA33}%s{ffffff} | {F5DEB3}%s{ffffff} | %f\n",indix+1,FurnitureSystem[i][fuNameFur],FurnitureSystem[i][fuName],odist);
				strcat(listitems,string);
				ShowPlayerVehicles[playerid][indix] = i;
				indix++;
			}
			if(indix != 0) SPD(playerid, D_DELETE_FURNIUTRE, DIALOG_STYLE_LIST, "Ближайшая мебель",listitems,"Выбрать","Отмена");
			return true;
	    }
	case D_DELETE_FURNIUTRE2:
	    {
	        if(!response)
	        {
	            new listitems[2048],indix = 0;
				for(new i=0; i<MAX_FOBJECTS; i++)
				{
					if(FurnitureSystem[i][fuid] == 0) continue;
					if(FurnitureSystem[i][fumodelid] == 0) continue;
					if(GetPlayerVirtualWorld(playerid) != FurnitureSystem[i][fuworldid]) continue;
		  			if(GetPlayerInterior(playerid) != FurnitureSystem[i][fuinteriorid]) continue;
					new Float:odist = GetPlayerDistanceFromPoint(playerid, FurnitureSystem[i][fuX], FurnitureSystem[i][fuY], FurnitureSystem[i][fuZ]);
					if(odist > 5) continue;
					format(string,sizeof(string),"%i) {33AA33}%s{ffffff} | {F5DEB3}%s{ffffff} | %f\n",indix+1,FurnitureSystem[i][fuNameFur],FurnitureSystem[i][fuName],odist);
					strcat(listitems,string);
					ShowPlayerVehicles[playerid][indix] = i;
					indix++;
				}
				if(indix == 0) return SCM(playerid,-1,"Поблизости нет мебели!");
				SPD(playerid, D_DELETE_FURNIUTRE, DIALOG_STYLE_LIST, "Ближайшая мебель",listitems,"Выбрать","Отмена");
				return true;
	        }
	        switch(listitem)
	        {
	        case 0:SPD(playerid,D_CHOOSE_TEXTURE3,DIALOG_STYLE_LIST,"Выбор индекса","Индекс №0\nИндекс №1\nИндекс №2\nИндекс №3\nИндекс №4\nИндекс №5","Выбрать","Отмена");
	        case 1:SPD(playerid,D_CHOOSE_COLOR3,DIALOG_STYLE_LIST,"Выбор индекса","Индекс №0\nИндекс №1\nИндекс №2\nИндекс №3\nИндекс №4\nИндекс №5","Выбрать","Отмена");
	        case 2:
				{
				    new retElement = GetPVarInt(playerid,"MySQLID");
					DestroyDynamicObjectEx(furnaobject[retElement]);
					editingobject[playerid] = CreateObject(FurnitureSystem[retElement][fumodelid],FurnitureSystem[retElement][fuX],FurnitureSystem[retElement][fuY],FurnitureSystem[retElement][fuZ],FurnitureSystem[retElement][fuRX],FurnitureSystem[retElement][fuRY],FurnitureSystem[retElement][fuRZ]);
	                EditObject(playerid,editingobject[playerid]);
					SetPVarInt(playerid,"usingslot",-1);
					SetPVarInt(playerid,"EditingFurniture",retElement);
					new Float:x, Float:y, Float:z;
					GetPlayerPos(playerid, x, y, z);
					SetPVarFloat(playerid,"FreshFurnitureX",FurnitureSystem[retElement][fuX]);
					SetPVarFloat(playerid,"FreshFurnitureY",FurnitureSystem[retElement][fuY]);
					SetPVarFloat(playerid,"FreshFurnitureZ",FurnitureSystem[retElement][fuZ]);
					SetPVarInt(playerid,"tid",0);
				}
			case 3:
	            {
	                new retElement = GetPVarInt(playerid,"MySQLID");
	                format(string,sizeof(string),"Ближайшая мебель, которую поставил %s, была удалена!",FurnitureSystem[retElement][fuName]);
					SCM(playerid,-1,string);
					DestroyDynamicObjectEx(furnaobject[retElement]);
			        FurnitureSystem[retElement][fuid] = 0;
			        FurnitureSystem[retElement][fumodelid] = 0;
			        FurnitureSystem[retElement][fuX] = 0.0;
			        strmid(FurnitureSystem[retElement][fuName], "No", 0, strlen("No"), MAX_PLAYER_NAME);
			        FurnitureSystem[retElement][fuY] = 0.0;
					FurnitureSystem[retElement][fuZ] = 0.0;
			  		FurnitureSystem[retElement][fuRX] = 0.0;
			  		FurnitureSystem[retElement][fuRY] = 0.0;
			  		FurnitureSystem[retElement][fuRZ] = 0.0;
			    	FurnitureSystem[retElement][fuworldid] = 0;
			  		FurnitureSystem[retElement][fuinteriorid] = 0;
			  		mysql_format(connects,string,sizeof(string),"UPDATE `furnitures` SET  `fumodelid` = '0' WHERE `id` = '%d'",retElement);
					mysql_function_query(connects,string,false,"","");
					new listitems[2048],indix = 0;
					for(new i=0; i<MAX_FOBJECTS; i++)
					{
						if(FurnitureSystem[i][fuid] == 0) continue;
						if(FurnitureSystem[i][fumodelid] == 0) continue;
						if(GetPlayerVirtualWorld(playerid) != FurnitureSystem[i][fuworldid]) continue;
			  			if(GetPlayerInterior(playerid) != FurnitureSystem[i][fuinteriorid]) continue;
						new Float:odist = GetPlayerDistanceFromPoint(playerid, FurnitureSystem[i][fuX], FurnitureSystem[i][fuY], FurnitureSystem[i][fuZ]);
						if(odist > 5) continue;
						format(string,sizeof(string),"%i) {33AA33}%s{ffffff} | {F5DEB3}%s{ffffff} | %f\n",indix+1,FurnitureSystem[i][fuNameFur],FurnitureSystem[i][fuName],odist);
						strcat(listitems,string);
						ShowPlayerVehicles[playerid][indix] = i;
						indix++;
					}
					if(indix == 0) return SCM(playerid,-1,"Поблизости нет мебели!");
					SPD(playerid, D_DELETE_FURNIUTRE, DIALOG_STYLE_LIST, "Ближайшая мебель",listitems,"Выбрать","Отмена");
				}
	        }
	        return true;
	    }
	case D_DELETE_FURNIUTRE:
 		{
			if(!response) return true;
	        SetPVarInt(playerid,"MySQLID",ShowPlayerVehicles[playerid][listitem]);
			SPD(playerid, D_DELETE_FURNIUTRE2, DIALOG_STYLE_LIST, "Ближайшая мебель", "Изменить текстуру\nИзменить цвет\nИзменить положение\nПродать", "Выбрать","Отмена");
	        return true;
	 	}
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
if(StrCmp(cmd, "/door"))
	{
	    for(new i=0; i<MAX_FOBJECTS; i++)
		{
			if(FurnitureSystem[i][fuid] == 0) continue;
			if(FurnitureSystem[i][fumodelid] == 0) continue;
			if(GetPlayerVirtualWorld(playerid) != FurnitureSystem[i][fuworldid]) continue;
  			if(GetPlayerInterior(playerid) != FurnitureSystem[i][fuinteriorid]) continue;
  			if((FurnitureSystem[i][fumodelid] < 1493 || FurnitureSystem[i][fumodelid] > 1535) && FurnitureSystem[i][fumodelid] != 1520) continue;
			if(!IsPlayerInRangeOfPoint(playerid, 2,FurnitureSystem[i][fuX], FurnitureSystem[i][fuY], FurnitureSystem[i][fuZ]))continue;
			if(PlayerInfo[playerid][pAdmin] < 4 && !GetPVarInt(playerid,"imalvaro"))
			{
				if(!YesPlayerObjectInventory(playerid,672,FurnitureSystem[i][fuid],1)) return SCM(playerid,-1,"У Вас нет ключей от данной двери!");
			}
			if(furnadoor[i] == false) SetDynamicObjectRot(furnaobject[i],0.0,0.0,FurnitureSystem[i][fuRZ]+90),furnadoor[i] = true;
			else SetDynamicObjectRot(furnaobject[i],0.0,0.0,FurnitureSystem[i][fuRZ]),furnadoor[i] = false;
			break;
		}
		return true;
	}
if(StrCmp(cmd, "/furn"))
	{
	    //if(PlayerInfo[playerid][pAdmin] < 4 && !GetPVarInt(playerid,"imalvaro")) return SCMNOADM(playerid);
	    new listitems[2048],indix = 0;
		for(new i=0; i<MAX_FOBJECTS; i++)
		{
			if(FurnitureSystem[i][fuid] == 0) continue;
			if(FurnitureSystem[i][fumodelid] == 0) continue;
			if(GetPlayerVirtualWorld(playerid) != FurnitureSystem[i][fuworldid]) continue;
  			if(GetPlayerInterior(playerid) != FurnitureSystem[i][fuinteriorid]) continue;
			new Float:odist = GetPlayerDistanceFromPoint(playerid, FurnitureSystem[i][fuX], FurnitureSystem[i][fuY], FurnitureSystem[i][fuZ]);
			if(odist > 5) continue;
			format(string,sizeof(string),"%i) {33AA33}%s{ffffff} | {F5DEB3}%s{ffffff} | %f\n",indix+1,FurnitureSystem[i][fuNameFur],FurnitureSystem[i][fuName],odist);
			strcat(listitems,string);
			ShowPlayerVehicles[playerid][indix] = i;
			indix++;
		}
		if(indix == 0) return SCM(playerid,-1,"Поблизости нет мебели!");
		SPD(playerid, D_DELETE_FURNIUTRE, DIALOG_STYLE_LIST, "Ближайшая мебель",listitems,"Выбрать","Отмена");
		return true;
	}
	else if(StrCmp(cmd, "/furniture"))
	{
	    if(GetPVarInt(playerid,"tid") > 0) return SCM(playerid,-1,"Вы в процессе покупки мебели!");
	    if(PlayerInfo[playerid][pSpawn] == 3 || PlayerInfo[playerid][pJailTime] > 0) return SCM(playerid,-1,"Нельзя использовать мебель в данный момент!");
	    if(GetPVarInt(playerid,"GameTypeComputer") > 0) return SCM(playerid,-1,"Запрещено использовать в игре!");
		if(GetPVarInt(playerid,"CuffedPlayerOdeli") == 1) return SCM(playerid,-1,"Вы в наручниках!");
		if(DeathPlayer[playerid] == true || PlayerInfo[playerid][pInjured] == 3) return SCM(playerid,-1,"Вы мертвы!");
	    if(GetPVarInt(playerid, "EditingFurniture") > 0) return SCM(playerid,-1,"Вы редактируете положение мебели!");
		if(PlayerInfo[playerid][pVip] < 1)
		{
		    new bool:build = false;
			for(new i = 0; i < TOTAL_HOUSES; i++)
			{
			    if(GetPlayerVirtualWorld(playerid) != i) continue;
			    if(!IsPlayerInRangeOfPoint(playerid, 60, HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz])) continue;
				if(!StrCmp(PlayerInfo[playerid][pName], HouseInfo[i][hOwner]) && !StrCmp(hArendator1[i],PlayerInfo[playerid][pName]) && !StrCmp(hArendator2[i],PlayerInfo[playerid][pName]) && !StrCmp(hArendator3[i],PlayerInfo[playerid][pName]) && !StrCmp(hArendator4[i],PlayerInfo[playerid][pName])) continue;
				build = true;
				break;
			}
			if(!build) return SCM(playerid, -1, "Вы можете ставить мебель только дома!");
		}
		new furnstring[1000],Zfurnitures = 10;
		SetPVarInt(playerid,"tid",0);
		switch(PlayerInfo[playerid][pVip])
		{
		case 1..3: Zfurnitures = 20;
		default: Zfurnitures = 10;
		}
		if(PlayerInfo[playerid][pDonateALL] > 500 && Zfurnitures == 10) Zfurnitures = 20;
		SetPVarInt(playerid,"usingslot2",0);
		for(new i = 0; i < Zfurnitures; i++)
		{
			if(PlayerInfo[playerid][Slot][i] != 0)
			{
			    if(StrCmp(PlayerInfo[playerid][pName],FurnitureSystem[PlayerInfo[playerid][Slot][i]][fuName])) format(furnstring,sizeof(furnstring),"%s{ffffff}%d) %s\n",furnstring,i+1,FurnitureSystem[PlayerInfo[playerid][Slot][i]][fuNameFur]);
                else PlayerInfo[playerid][Slot][i] = 0,format(furnstring,sizeof(furnstring),"%s{ffffff}%d) Слот №%d {33AA33}(Свободно)\n",furnstring,i+1,i);
			}
			else format(furnstring,sizeof(furnstring),"%s{ffffff}%d) Слот №%d {33AA33}(Свободно)\n",furnstring,i+1,i);
			if(i+1 == 20 && (PlayerInfo[playerid][pVip] >= 1 || PlayerInfo[playerid][pDonateALL] >= 500)) strcat(furnstring,"Дальше >>>");
		}
		SPD(playerid, DIALOG_OBJECTS, DIALOG_STYLE_LIST,"Мебель",furnstring, "Выбрать", "Отмена");
		return true;
	}
	
	
	
	
	
	
	
publics:OnPlayerModelSelection(playerid, response, listid, modelid)
{
	if(listid == MSelectionMenu[11])
	{
	    new playaid = GetPVarInt(playerid,"TualetID");
		new Float:x ,Float:y, Float:z, Float:a;
		GetPlayerFacingAngle(playerid, a);
		GetPlayerPos(playerid,x,y,z);
		new Float:b_x, Float:b_y, Float:b_z, Float:b_a;
		GetPlayerPos(playerid, Float:b_x, Float:b_y, Float:b_z);
		GetPlayerFacingAngle(playerid, b_a);
		b_x += floatsin(-b_a, degrees);
		b_y += floatcos(-b_a, degrees);
		Blocks[playerid][playaid] = 1;
		block[playerid][playaid] = CreateDynamicObject(modelid,b_x,b_y,z,0,0,a);
	    SetPVarFloat(playerid,"FreshFurnitureX",b_x);
		SetPVarFloat(playerid,"FreshFurnitureY",b_y);
		SetPVarFloat(playerid,"FreshFurnitureZ",z);
	    EditDynamicObject(playerid,block[playerid][playaid]);
	    SetPVarInt(playerid, "blockid", playaid);
	    SetPVarInt(playerid, "TualetID", modelid);
	}
}
public OnPlayerEditObject(playerid, playerobject, objectid, response, Float:fX, Float:fY, Float:fZ, Float:fRotX, Float:fRotY, Float:fRotZ)
{
    new Furniture = GetPVarInt(playerid, "EditingFurniture"),BytFurniture = GetPVarInt(playerid,"tid");
    if(BytFurniture > 0)
	{
	    if(VectorSize(fX-GetPVarFloat(playerid,"FreshFurnitureX"), fY-GetPVarFloat(playerid,"FreshFurnitureY"), fZ-GetPVarFloat(playerid,"FreshFurnitureZ")) > 5 || GetPlayerSurfingObjectID(playerid) == objectid)
	    {
	        SetPVarInt(playerid,"usingslot",-1);
         	DestroyObject(prevs[playerid]);
            prevs[playerid] = -1;
            //CancelEdit(playerid);
            SetPVarInt(playerid,"tid",0);
            return true;
	    }
	    new liems = GetPVarInt(playerid,"FurID");
		if(response == EDIT_RESPONSE_FINAL)
		{
			new topik = -1;
            for(new yo = 0;yo < MAX_FOBJECTS;yo++)
            {
                if(yo == 0) continue;
                if(FurnitureSystem[yo][fuid] != 0) continue;
                topik = yo;
                break;
            }
            if(topik == -1) SCM(playerid,-1,"Достигнут лимит мебели!");
			else
			{
            	new string[128];
            	SetPVarInt(playerid,"FurnitureID",topik);
				format(string,sizeof(string),"{ffffff}Вы уверены, что хотите купить {9ACD32}%s {ffffff}за ${9ACD32}%d?",FurnitureBuy[liems][tablename],FurnitureBuy[liems][tableprice]);
				SPD(playerid,DIALOG_BUY_F,DIALOG_STYLE_MSGBOX,"Подтверждение",string,"Да","Нет");
				//SetPVarInt(playerid,"usingslot",-1);
			}
		}
		else if(response == EDIT_RESPONSE_CANCEL)
		{
			SetPVarInt(playerid,"usingslot",-1);
         	DestroyObject(prevs[playerid]);
            prevs[playerid] = -1;
            SetPVarInt(playerid,"tid",0);
            return true;
            //CancelEdit(playerid);
		}
	}
	else if(Furniture > 0)
	{
        if(PlayerInfo[playerid][pVip] < 1)
		{
		    new bool:build = false;
			for(new i = 0; i < TOTAL_HOUSES; i++)
			{
			    if(GetPlayerVirtualWorld(playerid) != i) continue;
			    if(!IsPlayerInRangeOfPoint(playerid, 60, HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz])) continue;
				if(!StrCmp(PlayerInfo[playerid][pName], HouseInfo[i][hOwner]) && !StrCmp(hArendator1[i],PlayerInfo[playerid][pName]) && !StrCmp(hArendator2[i],PlayerInfo[playerid][pName]) && !StrCmp(hArendator3[i],PlayerInfo[playerid][pName]) && !StrCmp(hArendator4[i],PlayerInfo[playerid][pName])) continue;
				build = true;
				break;
			}
			if(!build) return SCM(playerid, -1, "Вы можете ставить мебель только дома!");
		}
	    if(VectorSize(fX-GetPVarFloat(playerid,"FreshFurnitureX"), fY-GetPVarFloat(playerid,"FreshFurnitureY"), fZ-GetPVarFloat(playerid,"FreshFurnitureZ")) > 5 || GetPlayerSurfingObjectID(playerid) == objectid)
	    {
	        DestroyObject(editingobject[playerid]);
            furnaobject[Furniture] = CreateDynamicObject(FurnitureSystem[Furniture][fumodelid],GetPVarFloat(playerid,"FreshFurnitureX"), GetPVarFloat(playerid,"FreshFurnitureY"), GetPVarFloat(playerid,"FreshFurnitureZ"), fRotX, fRotY, fRotZ,FurnitureSystem[Furniture][fuworldid],FurnitureSystem[Furniture][fuinteriorid],-1,70.0,70.0);
            UpdateObjectMaterial(furnaobject[Furniture],Furniture);
			SetPVarInt(playerid,"EditingFurniture",0);
            SCM(playerid,-1,"Нельзя передвигать мебель таким образом!");
            SetPVarFloat(playerid,"FreshFurnitureX",FurnitureSystem[Furniture][fuX]);
			SetPVarFloat(playerid,"FreshFurnitureY",FurnitureSystem[Furniture][fuY]);
			SetPVarFloat(playerid,"FreshFurnitureZ",FurnitureSystem[Furniture][fuZ]);
            //CancelEdit(playerid);
	    }
		if(response == EDIT_RESPONSE_FINAL)
		{
			furnaobject[Furniture] = CreateDynamicObject(FurnitureSystem[Furniture][fumodelid],fX, fY, fZ, fRotX, fRotY, fRotZ,FurnitureSystem[Furniture][fuworldid],FurnitureSystem[Furniture][fuinteriorid],-1,70.0,70.0);
			FurnitureSystem[Furniture][fuX] = fX;
			FurnitureSystem[Furniture][fuY] = fY;
			FurnitureSystem[Furniture][fuZ] = fZ;
			FurnitureSystem[Furniture][fuRX] = fRotX;
			FurnitureSystem[Furniture][fuRY] = fRotY;
			FurnitureSystem[Furniture][fuRZ] = fRotZ;
			UpdateObjectMaterial(furnaobject[Furniture],Furniture);
			f_ObjectSave(Furniture);
			DestroyObject(editingobject[playerid]);
			SetPVarInt(playerid,"EditingFurniture",0);
		}
		else if(response == EDIT_RESPONSE_CANCEL)
		{
			DestroyObject(editingobject[playerid]);
            furnaobject[Furniture] = CreateDynamicObject(FurnitureSystem[Furniture][fumodelid],fX, fY, fZ, fRotX, fRotY, fRotZ,FurnitureSystem[Furniture][fuworldid],FurnitureSystem[Furniture][fuinteriorid],-1,70.0,70.0);
            UpdateObjectMaterial(furnaobject[Furniture],Furniture);
			SetPVarInt(playerid,"EditingFurniture",0);
		}
	}
}
publics:f_ObjectsLoad()
{
	new rows,fields;
	cache_get_data(rows,fields);
	if(rows)
	{
		new temp[48];
		for(new i = 0; i < rows; i++)
		{
			cache_get_field_content(i, "id", temp);
			new privary = strval(temp);
			if(privary > 0)
   			{
   			    FurnitureSystem[privary][fuid] = privary;
				cache_get_field_content(i, "fumodelid", temp), FurnitureSystem[privary][fumodelid] = strval(temp);
				cache_get_field_content(i, "x", temp), FurnitureSystem[privary][fuX] = floatstr(temp);
				cache_get_field_content(i, "y", temp), FurnitureSystem[privary][fuY] = floatstr(temp);
				cache_get_field_content(i, "z", temp), FurnitureSystem[privary][fuZ] = floatstr(temp);
				cache_get_field_content(i, "rx", temp), FurnitureSystem[privary][fuRX] = floatstr(temp);
				cache_get_field_content(i, "ry", temp), FurnitureSystem[privary][fuRY] = floatstr(temp);
				cache_get_field_content(i, "rz", temp), FurnitureSystem[privary][fuRZ] = floatstr(temp);
				cache_get_field_content(i, "fuworldid", temp), FurnitureSystem[privary][fuworldid] = strval(temp);
				cache_get_field_content(i, "fuinteriorid", temp), FurnitureSystem[privary][fuinteriorid] = strval(temp);
				cache_get_field_content(i, "fuName", temp), strmid(FurnitureSystem[privary][fuName], temp, 0, strlen(temp), MAX_PLAYER_NAME);
				cache_get_field_content(i, "fuNameFur", temp), strmid(FurnitureSystem[privary][fuNameFur], temp, 0, strlen(temp), 48);
				furnaobject[privary] = CreateDynamicObject(FurnitureSystem[privary][fumodelid],FurnitureSystem[privary][fuX],FurnitureSystem[privary][fuY],FurnitureSystem[privary][fuZ],FurnitureSystem[privary][fuRX],FurnitureSystem[privary][fuRY],FurnitureSystem[privary][fuRZ],FurnitureSystem[privary][fuworldid],FurnitureSystem[privary][fuinteriorid],-1,70.0,70.0);
				for(new d = 0;d < 6;d++)
				{
					cache_get_row(i,12+d,temp);
					FurnitureSystem[privary][fuColour][d] = strval(temp);
					cache_get_row(i,18+d,temp);
					FurnitureSystem[privary][fuTexture][d] = strval(temp);
				}
				UpdateObjectMaterial(furnaobject[privary],privary);
				//cache_get_row(i,17,temp); FurnitureSystem[privary][fuColour][5] = strval(temp);
			}
		}
		printf("Система мебели: Загружено %d мебели!",rows-1);
	}
	return 1;
}
stock f_ObjectSave(aid)
{
	new bigquery[400];
	mysql_format(connects,bigquery,sizeof(bigquery),"UPDATE `furnitures` SET `fumodelid` = '%d',`x` = '%f',`y` = '%f',`z` = '%f',`rx` = '%f',`ry` = '%f',`rz` = '%f',`fuName` = '%s',`fuNameFur` = '%s',`fuworldid` = '%d',`fuinteriorid` = '%d' WHERE `id` = '%d'",
	FurnitureSystem[aid][fumodelid],FurnitureSystem[aid][fuX],FurnitureSystem[aid][fuY],FurnitureSystem[aid][fuZ],FurnitureSystem[aid][fuRX],FurnitureSystem[aid][fuRY],FurnitureSystem[aid][fuRZ],FurnitureSystem[aid][fuName],FurnitureSystem[aid][fuNameFur],FurnitureSystem[aid][fuworldid],FurnitureSystem[aid][fuinteriorid],aid);
	mysql_function_query(connects,bigquery,false,"","");
	return 1;
}
stock UpdateObjectMaterial(objects,index,type = 9999)
{
	if(type == 9999)
	{
    	for(new d = 0;d < 6;d++)
		{
		    if(FurnitureSystem[index][fuColour][d] == 0 && FurnitureSystem[index][fuTexture][d] == 0) SetDynamicObjectMaterial(objects, d, -1, "none", "none", 0);
			if(FurnitureSystem[index][fuColour][d] > 0 && FurnitureSystem[index][fuTexture][d] == 0) SetDynamicObjectMaterial(objects, d, -1, "none", "none", FurnitureColours[FurnitureSystem[index][fuColour][d]]);
			if(FurnitureSystem[index][fuColour][d] == 0 && FurnitureSystem[index][fuTexture][d] > 0) SetDynamicObjectMaterial(objects, d, TEXTURE_INFO[FurnitureSystem[index][fuTexture][d]][faModel], TEXTURE_INFO[FurnitureSystem[index][fuTexture][d]][faName2], TEXTURE_INFO[FurnitureSystem[index][fuTexture][d]][faName3], 0);
    	    if(FurnitureSystem[index][fuColour][d] > 0 && FurnitureSystem[index][fuTexture][d] > 0) SetDynamicObjectMaterial(objects, d, TEXTURE_INFO[FurnitureSystem[index][fuTexture][d]][faModel], TEXTURE_INFO[FurnitureSystem[index][fuTexture][d]][faName2], TEXTURE_INFO[FurnitureSystem[index][fuTexture][d]][faName3], FurnitureColours[FurnitureSystem[index][fuColour][d]]);
		}
	}
	else
	{
		if(FurnitureSystem[index][fuColour][type] == 0 && FurnitureSystem[index][fuTexture][type] == 0) SetDynamicObjectMaterial(objects, type, -1, "none", "none", 0);
		if(FurnitureSystem[index][fuColour][type] > 0 && FurnitureSystem[index][fuTexture][type] == 0) SetDynamicObjectMaterial(objects, type, -1, "none", "none", FurnitureColours[FurnitureSystem[index][fuColour][type]]);
		if(FurnitureSystem[index][fuColour][type] == 0 && FurnitureSystem[index][fuTexture][type] > 0) SetDynamicObjectMaterial(objects, type, TEXTURE_INFO[FurnitureSystem[index][fuTexture][type]][faModel], TEXTURE_INFO[FurnitureSystem[index][fuTexture][type]][faName2], TEXTURE_INFO[FurnitureSystem[index][fuTexture][type]][faName3], 0);
    	if(FurnitureSystem[index][fuColour][type] > 0 && FurnitureSystem[index][fuTexture][type] > 0) SetDynamicObjectMaterial(objects, type, TEXTURE_INFO[FurnitureSystem[index][fuTexture][type]][faModel], TEXTURE_INFO[FurnitureSystem[index][fuTexture][type]][faName2], TEXTURE_INFO[FurnitureSystem[index][fuTexture][type]][faName3], FurnitureColours[FurnitureSystem[index][fuColour][type]]);
	}
	return true;
}
stock GetTypeFurniture(list,listitem)
{
	switch(list)
	{
	case 0:
	    {
	  		if(listitem == 0) return 0;
	  		if(listitem == 1) return 1;
	  		if(listitem == 2) return 2;
	  		if(listitem == 3) return 3;
	  		if(listitem == 4) return 4;
	  	}
	case 1:
	    {
	  		if(listitem == 0) return 5;
	  		if(listitem == 1) return 6;
	  		if(listitem == 2) return 7;
	  		if(listitem == 3) return 8;
	  		if(listitem == 4) return 9;
	  	}
	case 2:
	    {
	  		if(listitem == 0) return 10;
	  		if(listitem == 1) return 11;
	  		if(listitem == 2) return 12;
	  		if(listitem == 3) return 13;
	  		if(listitem == 4) return 14;
	  		if(listitem == 5) return 15;
	  		if(listitem == 6) return 16;
	  	}
	case 3:
	    {
	  		if(listitem == 0) return 17;
	  		if(listitem == 1) return 18;
	  		if(listitem == 2) return 19;
	  		if(listitem == 3) return 20;
	  		if(listitem == 4) return 21;
	  		if(listitem == 5) return 22;
	  	}
	case 4:
	    {
	  		if(listitem == 0) return 23;
	  		if(listitem == 1) return 24;
	  		if(listitem == 2) return 25;
	  	}
	case 5:
	    {
	  		if(listitem == 0) return 26;
	  		if(listitem == 1) return 27;
	  		if(listitem == 2) return 28;
	  		if(listitem == 3) return 29;
	  	}
	case 6:
	    {
	  		if(listitem == 0) return 30;
	  		if(listitem == 1) return 31;
	  		if(listitem == 2) return 32;
	  		if(listitem == 3) return 33;
	  		if(listitem == 4) return 34;
	  	}
	case 7:
	    {
	  		if(listitem == 0) return 35;
	  		if(listitem == 1) return 36;
	  		if(listitem == 2) return 37;
	  		if(listitem == 3) return 38;
	  	}
	case 8:
	    {
	  		if(listitem == 0) return 39;
	  		if(listitem == 1) return 40;
	  		if(listitem == 2) return 41;
	  		if(listitem == 3) return 42;
	  		if(listitem == 4) return 43;
	  		if(listitem == 5) return 44;
	  		if(listitem == 6) return 45;
	  		if(listitem == 7) return 46;
	  		if(listitem == 8) return 47;
	  		if(listitem == 9) return 48;
	  		if(listitem == 10) return 49;
	  	}
	}
	return 0;
}
